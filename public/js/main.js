import{initializeApp as e}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";import{getAuth as t,onAuthStateChanged as a}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";import{getFirestore as o,setDoc as n,doc as s,getDoc as i,updateDoc as r,addDoc as d,collection as l,query as c,where as u,getDocs as m,limit as p,deleteDoc as y,limitToLast as g,startAfter as f,endBefore as h,orderBy as b,enableIndexedDbPersistence as $,runTransaction as w,writeBatch as v,deleteField as I}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";import{getStorage as P,ref as C,uploadBytes as E,getDownloadURL as S,deleteObject as L}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-storage.js";import{toggleComments as k}from"./commentsReplies.js";let firebaseConfig={apiKey:"AIzaSyB5Q0kHoViWJl-t-pWCKj_AT-ClAMadfrU",authDomain:"life-swap-6065e.firebaseapp.com",projectId:"life-swap-6065e",storageBucket:"life-swap-6065e.firebasestorage.app",messagingSenderId:"475311181000",appId:"1:475311181000:web:32d03d80f70081bfb629fd",measurementId:"G-CHJY2ZEYYF"},app=e(firebaseConfig),db=o(app),auth=t(app),storage=P(app);$(db).then(()=>{console.log("Offline persistence enabled successfully!")}).catch(e=>{"failed-precondition"===e.code?console.warn("Persistence failed: Multiple tabs open. Only one tab can enable persistence."):"unimplemented"===e.code?console.warn("Persistence not available: Browser doesn’t support it."):console.error("Persistence error:",e)});export let communityId;export let userDataCache={};let USER_CACHE_TTL=36e5,USER_CACHE_MAX_SIZE=100;function getCachedUser(e){let t=userDataCache[e];return t?Date.now()>t.expiry?(delete userDataCache[e],console.log(`Cache expired for ${e}`),null):t.value:null}function setCachedUser(e,t){if(Object.keys(userDataCache).length>=100){let a=Object.keys(userDataCache)[0];delete userDataCache[a],console.log(`Cache size limit hit, removed ${a}`)}userDataCache[e]={value:t,expiry:Date.now()+36e5},console.log(`Cached ${e}, expires at ${new Date(Date.now()+36e5)}`)}let currentPage=1;export const postsPerPage=10;let lastMemberDoc=null;export let carouselPostIds=[];let carouselIndex=0;export const postsPerCarousel=window.innerWidth<768?2:4;export let isLoading=!1;let lastPostDoc=null,totalPosts=0;export const postsPerLoad=10;let loadedPostIds=new Set,initialPostsLoaded=!1,isSearching=!1,postCache=new Map;export const POSTS_PER_LOAD=20;let isFetching=!1,allNotifications=[],lastDoc=null,displayedCount=0,categoryDisplayMap={clothing_accessories:"Clothing & Accessories",electronics:"Electronics & Gadgets",furniture_decor:"Furniture & Home Decor",kitchen_dining:"Kitchen & Dining",tools_diy:"Tools & DIY",books_media:"Books, Movies & Music",arts_crafts:"Arts & Crafts",toys_games:"Toys & Games",sports_outdoors:"Sports & Outdoors",health_beauty:"Health & Beauty",baby_kids:"Baby & Kids",pet_supplies:"Pet Supplies",misc:"Miscellaneous"};async function initializeUserSwapInfo(){let e=auth.currentUser;if(!e)return;if(!communityId){console.error("communityId is undefined, cannot initialize user swap info");return}let t=s(db,"users",e.uid),a=await i(t),o;if(console.log(`Fetching user data for UID: ${e.uid}`),a.exists()){if(o=a.data(),console.log("Existing user data:",o),void 0===o.swaps&&(console.log("Swaps field undefined, setting to 0"),await r(t,{swaps:0}),o.swaps=0),Array.isArray(o.communityIds)||(console.log("communityIds is not an array or undefined, initializing as []"),o.communityIds=[],await r(t,{communityIds:o.communityIds})),!o.communityIds.includes(communityId)){console.log(`Adding communityId ${communityId} to communityIds`),o.communityIds.push(communityId);try{console.log("Updating communityIds with:",o.communityIds),await r(t,{communityIds:o.communityIds})}catch(d){throw console.error("Error updating communityIds:",d),console.log("Current userData state:",o),d}}}else o={name:e.displayName||"Unnamed User",username:`user_${e.uid.slice(0,8)}`,profilePhoto:e.photoURL||null,email:e.email||null,city:null,phone:null,communityIds:[communityId],swaps:0,createdAt:new Date},console.log("Creating new user with data:",o),await n(t,o),console.log(`Created new user in DB: ${o.username}`);let l=document.getElementById("userNameCopy"),c=document.getElementById("swapCount");o.username||(console.error("Username is undefined, falling back to UID-based default"),o.username=`user_${e.uid.slice(0,8)}`,await r(t,{username:o.username})),l.textContent=o.username,c.textContent=o.swaps,l.addEventListener("click",()=>{navigator.clipboard.writeText(o.username).then(()=>alert("Username copied to clipboard!")).catch(e=>console.error("Failed to copy username:",e))})}async function updateChatBadge(e,t=!1){let a=c(l(db,"users",e,"chatIds"),u("hasUnread","==",!0)),o=await m(a),n=document.getElementById("viewChatsBtn");if(t&&o.size>0){let s=v(db);o.docs.forEach(e=>{s.update(e.ref,{hasUnread:!1})}),await s.commit(),console.log("Cleared unread flags for chats:",o.size)}let i=!t&&o.size>0;n&&(n.innerHTML=`💬 Chats ${i?'<span class="chat-badge">(new)</span>':""}`)}async function updateProfileRequestsUI(e){let t=l(db,"users",e,"profileRequests"),a=c(t,u("status","==","pending")),o=await m(a),n=o.size,s=document.getElementById("profileRequestsBtn");s?s.innerHTML=n>0?`<button id="viewRequestsBtn">Profile Requests (${n})</button>`:"":console.error("profileRequestsBtn not found in DOM"),document.getElementById("viewRequestsBtn")&&document.getElementById("viewRequestsBtn").addEventListener("click",()=>viewProfileViewRequests(e));let i=document.getElementById("communityActions");if(i){let r=c(t,u("status","==","pending")),d=await m(r),p=d.size,y=i.querySelector("#viewProfileViewRequestsBtn");y&&(y.innerHTML=`Profile Requests ${p>0?`<span class="request-badge">${p}</span>`:""}`)}}function closeModal(e){let t=document.getElementById(e);t.classList.add("hidden"),t.style.display="none";let a=Array.from(document.querySelectorAll(".modal:not(.hidden)"));a.length>0&&(a[a.length-1].style.display="flex"),document.querySelectorAll(".suggestions").forEach(e=>e.classList.add("hidden"))}function copyCommunityId(){navigator.clipboard.writeText(communityId).then(()=>alert("Community ID copied!")).catch(e=>console.error("Failed to copy:",e))}function copyPostId(e){navigator.clipboard.writeText(e).then(()=>alert("Post ID copied!")).catch(e=>console.error("Failed to copy:",e))}async function deleteCommunity(e){if(!confirm("Are you sure you want to delete this community? This action is permanent and cannot be undone."))return;let t=s(db,"communities",e),a=["members","posts","banAppeals","postReports"],o=document.getElementById("delete-status"),n=document.body,r=0;function d(e,t="in-progress"){o&&(o.textContent=e,o.className=`delete-status ${"in-progress"===t?"deleting":t}`,o.style.display="block"),"in-progress"===t?n.classList.add("deleting"):n.classList.remove("deleting"),console.log(`[DeleteCommunity] ${e}`)}d("Initiating community deletion process... Please wait.","in-progress");try{console.log("[DeleteCommunity] Firestore instance:",db.toString()),console.log("[DeleteCommunity] Community reference path:",t.path);let c=await i(t);if(console.log("[DeleteCommunity] Pre-deletion check - Document exists:",c.exists()),c.exists())console.log("[DeleteCommunity] Pre-deletion document data:",c.data());else{d("Community does not exist. Deletion unnecessary.","success");return}async function u(){let e=Date.now();console.log("[DeleteCommunity] Executing deletion transaction at:",new Date().toISOString()),await w(db,async e=>{let o=await e.get(t);if(!o.exists()){console.log("[DeleteCommunity] Document not found during transaction - skipping.");return}for(let n of a){console.log(`[DeleteCommunity] Processing subcollection: ${n}`);let s=l(t,n),i=await m(s);console.log(`[DeleteCommunity] ${n} contains ${i.size} documents`),i.forEach(t=>{e.delete(t.ref)}),console.log(`[DeleteCommunity] Queued ${i.size} documents in ${n} for deletion`)}e.delete(t),console.log("[DeleteCommunity] Main community document queued for deletion")}),console.log("[DeleteCommunity] Transaction completed in:",(Date.now()-e)/1e3,"seconds")}for(d("Deleting community data..."),await u();r<5;){let p=await i(t);console.log(`[DeleteCommunity] Verification ${r+1} - Post-deletion check - Exists:`,p.exists()),p.exists()?console.log("[DeleteCommunity] Document still present:",p.data()):console.log("[DeleteCommunity] Document successfully removed - verifying persistence..."),await new Promise(e=>setTimeout(e,2e3));let y=await i(t);if(console.log(`[DeleteCommunity] Verification ${r+1} - After 2s delay - Exists:`,y.exists()),y.exists())console.error("[DeleteCommunity] Document reappeared with data:",y.data()),r++,d(`Deletion incomplete - Retrying (${r}/5)...`),console.log(`[DeleteCommunity] Retry ${r} initiated at:`,new Date().toISOString()),await u();else{console.log("[DeleteCommunity] Deletion confirmed - Document permanently removed.");break}}if(r>=5)throw Error("Unable to delete community - Document persists after maximum retries.");resetCommDataCache(),console.log("[DeleteCommunity] Local cache cleared."),d(`Community ${e} successfully deleted. Redirecting...`,"success"),setTimeout(()=>{window.location.href="./start.html"},2e3)}catch(g){console.error("[DeleteCommunity] Deletion process failed:",g),d(`Error: ${g.message}`,"error"),alert("Community deletion failed. Please review the console for details.")}}async function leaveCommunity(e){if(!confirm("Are you sure you want to leave this community?"))return;let t=auth.currentUser;if(!t){console.error("No authenticated user!"),alert("You must be logged in to leave a community.");return}let a=s(db,"users",t.uid),o=s(db,"communities",e,"members",t.uid);try{let n=v(db);n.delete(o),console.log(`Queued deletion of member ${t.uid} from community ${e}`);let r=await i(a);if(!r.exists())throw Error("User document not found in Firestore");let d=r.data(),l=d.communityIds||[];console.log("Current communityIds before leaving:",l);let c=l.filter(t=>t!==e);l.length===c.length?console.warn(`Community ID ${e} not found in user's communityIds array`):(console.log("Updated communityIds after leaving:",c),n.update(a,{communityIds:c})),await n.commit(),console.log(`Successfully left community ${e}. Updated communityIds:`,c);let u=await i(a),m=u.data().communityIds||[];if(console.log("Verified communityIds in Firestore after update:",m),m.includes(e))throw console.error(`Failed to remove community ID ${e} from user's communityIds`),Error("Verification failed: Community ID still present in user's communityIds");console.log(`Confirmed: Community ID ${e} removed from user's communityIds`),resetCommDataCache(),alert("You have successfully left the community!"),window.location.href="./start.html"}catch(p){console.error("Error leaving community:",p),alert(`Failed to leave the community: ${p.message}. Check the console for details.`)}}async function fetchCurrentUserData(){let e=auth.currentUser,t="currentUserData",a=JSON.parse(sessionStorage.getItem(t));if(a&&a.uid===e.uid)return a;let o=s(db,"users",e.uid),n=await i(o);if(!n.exists()){console.log(`No user doc found for current uid ${e.uid}`);let r={name:"Unknown",username:"unknown",profilePhoto:null,email:null,city:null,phone:null,uid:e.uid};return sessionStorage.setItem(t,JSON.stringify(r)),r}let d=n.data(),l={name:d.name||"Unknown",username:d.username||"unknown",profilePhoto:d.profilePhoto||null,email:d.email||null,city:d.city||null,phone:d.phone||null,uid:e.uid};return sessionStorage.setItem(t,JSON.stringify(l)),l}async function fetchUserData(e){if(!e)return{name:"Unknown",username:"unknown",profilePhoto:"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y",uid:"unknown"};let t=Array.isArray(e)?e:[e],a=t.filter(e=>!userDataCache[e]||"Unknown"===userDataCache[e].name);if(a.length>0){let o=[];for(let n=0;n<a.length;n+=10)o.push(a.slice(n,n+10));for(let s of o){let i=c(l(db,"users"),u("__name__","in",s)),r=await m(i);r.forEach(e=>{let t=e.data();userDataCache[e.id]={name:t.name||"Unknown",username:t.username||"unknown",profilePhoto:t.profilePhoto||"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y",email:t.email||null,city:t.city||null,phone:t.phone||null,uid:e.id,swaps:t.swaps||0},userDataCache[`username:${t.username}`]=userDataCache[e.id]}),s.forEach(e=>{userDataCache[e]||(userDataCache[e]={name:"Unknown",username:"unknown",profilePhoto:"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y",uid:e})})}}return 1===t.length?userDataCache[t[0]]:t.map(e=>userDataCache[e])}async function getPostReportStatus(e){let t=l(db,"communities",communityId,"postReports"),a=c(t,u("postId","==",e)),o=await m(a),n=o.size,r=await getCommData(),d=auth.currentUser,p=r.admins?.includes(d.uid)||r.creatorId===d.uid,y=s(db,"communities",communityId,"posts",e),g=await i(y);if(!g.exists())return console.log(`Post ${e} not found—assuming deleted.`),{reportCount:n,isHidden:n>=2&&!p,isAdmin:p,isOwner:!1};let f=g.data(),h=f.userId===d.uid;return{reportCount:n,isHidden:n>=2&&!p&&!h,isAdmin:p,isOwner:h}}async function reportPost(e){let t=auth.currentUser,a=l(db,"communities",communityId,"postReports"),o=c(a,u("postId","==",e),u("reporterId","==",t.uid)),n=await m(o);if(!n.empty){alert("You’ve already reported this post!");return}if(!confirm("Are you sure you want to report this post?"))return;await d(a,{postId:e,reporterId:t.uid,communityId,timestamp:new Date}),alert("Post reported!"),refreshReportSummary(t.uid);let s=document.getElementById(`post-${e}`),i=await getPostReportStatus(e),r=await getCommData(),p=r.admins?.includes(t.uid)||r.creatorId===t.uid;if(s){let y=s.querySelector(".report-warning"),g=s.querySelector(".admin-report-controls");if(y&&y.remove(),g&&g.remove(),i.isHidden){s.remove();return}i.isOwner&&(1===i.reportCount?s.insertAdjacentHTML("beforeend",`<div class="report-warning" id="warning-${e}">
            This post has 1 report. One more will hide it from others—check it in the summary above!
          </div>`):i.reportCount>=2&&s.insertAdjacentHTML("beforeend",`<div class="report-warning" id="warning-${e}">
            This post has ${i.reportCount} reports and is hidden from others. Appeal in the summary above!
          </div>`)),p&&i.reportCount>0&&(s.insertAdjacentHTML("beforeend",`<div class="admin-report-controls" id="admin-controls-${e}">
          This post received ${i.reportCount} report${i.reportCount>1?"s":""}.
          <button class="remove-post-btn" data-post-id="${e}">Remove Post</button>
          <button class="clear-reports-btn" data-post-id="${e}">Clear Reports</button>
        </div>`),s.querySelector(`.remove-post-btn[data-post-id="${e}"]`).addEventListener("click",()=>deletePost(e)),s.querySelector(`.clear-reports-btn[data-post-id="${e}"]`).addEventListener("click",()=>clearReports(e)))}let f=document.querySelector(`#yourPostsList #post-${e}`);if(f){let h=f.querySelector(".report-warning");h&&h.remove(),i.isOwner&&(1===i.reportCount?f.insertAdjacentHTML("beforeend",`<div class="report-warning" id="warning-${e}">
            This post has 1 report. One more will hide it from others—check it in the summary above!
          </div>`):i.reportCount>=2&&f.insertAdjacentHTML("beforeend",`<div class="report-warning" id="warning-${e}">
            This post has ${i.reportCount} reports and is hidden from others. Appeal in the summary above!
          </div>`))}await loadAdminReportSummary(t.uid)}async function clearReports(e){if(confirm("Clear all reports for this post? It’ll be visible again.")){let t=auth.currentUser,a=l(db,"communities",communityId,"postReports"),o=c(a,u("postId","==",e)),n=await m(o),s=n.docs.map(e=>y(e.ref));await Promise.all(s),loadPosts(communityId,currentPage),loadCarouselPosts(communityId),refreshReportSummary(t.uid)}}async function compressImage(e){return new Promise(t=>{let a=new Image,o=document.createElement("canvas"),n=o.getContext("2d");a.onload=()=>{let e=a.width,s=a.height;e>s?e>800&&(s*=800/e,e=800):s>800&&(e*=800/s,s=800),o.width=e,o.height=s,n.drawImage(a,0,0,e,s),o.toBlob(e=>t(e),"image/jpeg",.7)},a.src=URL.createObjectURL(e)})}function setupLocationAutocomplete(){let e=document.getElementById("postLocation"),t=document.getElementById("postLocationSuggestions");if(!e||!t){console.error("Location input or suggestions div not found!");return}let a=new Map;async function o(e){let t=function e(t){let o=a.get(t);return o?Date.now()>o.expiry?(a.delete(t),null):o.value:null}(e);if(t)return t;let o=`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(e)}&format=json&limit=5&addressdetails=1`;try{let n=await fetch(o,{headers:{"User-Agent":"LifeSwap/1.0 (your-email@example.com)"}});if(!n.ok)throw Error(`HTTP error! Status: ${n.status}`);let s=await n.json();return!function e(t,o){if(a.size>=50){let n=a.keys().next().value;a.delete(n)}a.set(t,{value:o,expiry:Date.now()+6e5})}(e,s),s}catch(i){return console.error("Error fetching location suggestions:",i),[]}}async function n(){let a=e.value.trim();if(a.length<2){t.innerHTML="",t.classList.add("hidden");return}t.innerHTML="<div class='loading'>⏳ Searching...</div>";let n=await o(a);!function a(o){if(t.innerHTML="",0===o.length){t.classList.add("hidden");return}t.classList.remove("hidden");let n=document.createDocumentFragment();o.forEach(a=>{let o=a.address.city||a.address.town||a.address.village||"",s=a.address.state||"";a.address.country;let i=o&&s?`${o}, ${s}`:a.display_name,r=document.createElement("div");r.classList.add("suggestion-item"),r.textContent=i,r.onclick=()=>{e.value=i,e.dataset.lat=a.lat,e.dataset.lon=a.lon,t.innerHTML="",t.classList.add("hidden")},n.appendChild(r)}),t.appendChild(n)}(n)}e.oninput=debounce(n,500)}async function editCommunityName(e){let t=s(db,"communities",e),a=await i(t),o=a.data(),n=o.name,d=document.createElement("div");d.id="edit-name-form",d.style.position="fixed",d.style.top="50%",d.style.left="50%",d.style.transform="translate(-50%, -50%)",d.style.background="#fff",d.style.padding="20px",d.style.border="1px solid #ccc",d.style.boxShadow="0 0 10px rgba(0,0,0,0.2)",d.style.zIndex="1000",d.innerHTML=`
<h3>Edit Community Name</h3>
<input type="text" id="newCommunityName" value="${n}" style="width: 100%; margin-bottom: 10px;">
<button id="saveNameBtn">Save</button>
<button id="cancelNameBtn">Cancel</button>
`,document.body.appendChild(d),document.getElementById("saveNameBtn").addEventListener("click",async()=>{let e=document.getElementById("newCommunityName").value.trim();if(!e){alert("Name can’t be empty!");return}if(e===n){alert("That’s already the name!"),document.body.removeChild(d);return}await r(t,{name:e}),document.getElementById("communityName").textContent=e,document.body.removeChild(d),alert("Community name updated!")}),document.getElementById("cancelNameBtn").addEventListener("click",()=>{document.body.removeChild(d)})}document.addEventListener("DOMContentLoaded",()=>{a(auth,async e=>{if(!e){console.log("No user detected, redirecting to login..."),window.location.href="/login.html";return}console.log("User authenticated:",e.uid);let t=new URLSearchParams(window.location.search);if(communityId=t.get("id"),window.communityId=communityId,!communityId){console.log("No community ID, redirecting to index..."),window.location.href="/index.html";return}postCache.clear(),loadedPostIds.clear(),console.log(`Cleared post caches for community ${communityId}`),await initializeUserSwapInfo();let a=await getCommData();if(!a){alert("Community not found!"),window.location.href="/index.html";return}let o=a.members.includes(e.uid),n=a.bannedUsers||[],r=a.banStatus||{},p=n.includes(e.uid)&&("active"===r[e.uid]||!r[e.uid]);if(p){let y="No admin email available",g=a.banReasons?.[e.uid]||"No reason provided";if(a.creatorId){let f=await i(s(db,"users",a.creatorId));f.exists()&&f.data().email&&(y=f.data().email)}if("No admin email available"===y&&a.admins?.length>0){let h=await i(s(db,"users",a.admins[0]));h.exists()&&h.data().email&&(y=h.data().email)}"active"!==r[e.uid]||a.banReasons?.[e.uid]||(g=`An administrator has reinstated your ban. For the original or a diffrent reason. Please contact us at ${y} or submit an appeal below.`),document.querySelector(".community-page").innerHTML=`
        <div class="ban-message">
          <h2>You are banned from this community!</h2>
          <p><strong>Reason:</strong> ${g}</p>
          <p>Think this is a mistake? Send an appeal below or contact an admin at: ${y}</p>
          <form id="banAppealForm" class="ban-appeal-form">
            <textarea placeholder="Explain why this ban might be an error..." required></textarea>
            <button type="submit">Send Appeal</button>
          </form>
          <p><a href="./start.html">Go back</a></p>
        </div>
      `;let b=document.getElementById("banAppealForm");b.addEventListener("submit",async t=>{t.preventDefault();let a=b.querySelector("textarea").value.trim();if(a){let o=await i(s(db,"users",e.uid)),n=o.exists()?o.data():{username:`user_${e.uid.slice(0,8)}`};await d(l(db,"communities",communityId,"banAppeals"),{userId:e.uid,username:n.username,message:a,timestamp:new Date}),alert("Appeal sent!"),b.querySelector("textarea").disabled=!0,b.querySelector("button").disabled=!0,b.querySelector("button").textContent="Appeal Sent"}});return}if(!o){document.querySelector(".community-page").innerHTML=`
        <div class="not-member-message">
          <h2>You aren't a member of this community.</h2>
          <p>Copy the community ID and go back to join! We are waiting for you! 💚</p>
          <p><strong>Community ID:</strong> <span id="communityIdText">${communityId}</span> 
             <a href="./start.html" id="copyAndJoinLink">Copy ID and Join</a></p>
          <p><a href="./start.html">Go back</a></p>
        </div>
      `,document.getElementById("copyAndJoinLink").addEventListener("click",e=>{e.preventDefault(),navigator.clipboard.writeText(communityId).then(()=>{alert("Community ID copied to clipboard! Head back to join."),setTimeout(()=>{window.location.href="./start.html"},500)}).catch(e=>{console.error("Failed to copy community ID:",e),alert("Failed to copy ID. Please copy it manually: "+communityId)})});return}document.addEventListener("visibilitychange",()=>{"visible"===document.visibilityState?(console.log("User is back on screen, resuming checks."),updateNotificationBadge(e.uid),updateChatBadge(e.uid)):console.log("User is away from screen, stopping updates.")}),document.getElementById("communityName").textContent=a.name;let $=a.createdAt?new Date(a.createdAt.toDate()).toLocaleString("en-US",{month:"long",day:"numeric",year:"numeric"}):"N/A";document.getElementById("createdAt").textContent=$;let w=await fetchUserData(a.creatorId);document.getElementById("creatorName").textContent=w.name||"Unknown",document.getElementById("creatorName").addEventListener("click",()=>viewProfile(a.creatorId)),document.getElementById("communityId").textContent=`ID: ${communityId}`,document.getElementById("totalUsers").textContent=a.memberCount||a.members.length,document.getElementById("bannedUsers").textContent=(a.bannedUsers||[]).length;let v=document.getElementById("communityActions"),I=0;if(e.uid){let P=c(l(db,"profileRequests"),u("targetId","==",e.uid),u("status","==","pending"));try{let C=await m(P);I=C.size}catch(E){console.error("Failed to fetch profile view requests:",E)}}else console.error("User UID is undefined, skipping profile requests query!");v.innerHTML=`
    <div class="admin-menu">
      ${a.admins&&a.admins.includes(e.uid)||a.creatorId===e.uid?"<h3>Admin:</h3>":""}
      ${a.creatorId===e.uid?'<button class="delete-btn" id="deleteCommunityBtn">Delete (Community)</button>':""}
      ${a.members.includes(e.uid)&&a.creatorId!==e.uid?'<button class="leave-btn" id="leaveCommunityBtn">Leave Community</button>':""}
      ${a.admins&&a.admins.includes(e.uid)||a.creatorId===e.uid?'<button id="viewBannedBtn">Banned (Users/Appeals)</button>':""}
      ${a.admins&&a.admins.includes(e.uid)||a.creatorId===e.uid?'<button id="editNameBtn">Edit Name (Community)</button>':""}
    </div>
      <br><br>
      <button id="viewMembersBtn">Members</button>
      <button id="viewProfileViewRequestsBtn">Profile Requests ${I>0?`<span class="request-badge">${I}</span>`:""}</button>
      <button id="viewSavedPostsBtn">Saved Posts</button>
      <button id="viewChatsBtn">💬 Chats</button>
      <button id="viewMyFollowersBtn">Followers</button>
    `,await new Promise(e=>setTimeout(e,0)),e.uid?await updateProfileRequestsUI(e.uid):console.error("Skipping updateProfileRequestsUI due to undefined UID");let S=document.getElementById("postSearch"),L=document.getElementById("categoryFilter"),k=document.getElementById("lookingForFilter"),B=document.getElementById("offeringFilter"),M=document.getElementById("carouselPrevBtn"),x=document.getElementById("carouselNextBtn"),D=document.getElementById("copyCommunityIdBtn"),T=document.getElementById("createPostBtn"),A=document.getElementById("viewMembersBtn"),q=document.getElementById("viewBannedBtn"),_=document.getElementById("deleteCommunityBtn"),U=document.getElementById("leaveCommunityBtn"),N=document.getElementById("viewProfileViewRequestsBtn"),R=document.getElementById("closeProfileBtn"),H=document.getElementById("closeMembersBtn"),F=document.getElementById("closeBannedBtn"),O=document.getElementById("closeProfileViewRequestsBtn"),z=document.getElementById("viewNotificationsBtn"),Y=document.getElementById("closeNotificationsBtn"),G=document.getElementById("clearNotificationsBtn"),V=document.getElementById("refreshPostsBtn"),j=document.getElementById("editNameBtn"),K=document.getElementById("viewCommunitiesBtn"),W=document.getElementById("viewSavedPostsBtn"),J=document.getElementById("viewChatsBtn"),Q=document.getElementById("postSearch"),X=document.getElementById("pasteSearchBtn"),Z=document.getElementById("clearSearchBtn"),ee=document.getElementById("viewMyFollowersBtn");async function et(){await updateChatBadge(e.uid,!0),await window.viewChats(communityId),await updateChatBadge(e.uid)}S&&S.addEventListener("input",debounce(e=>{searchPostsById(e.target.value)},300)),X.addEventListener("click",async()=>{try{let e=await navigator.clipboard.readText();Q.value=e,searchPostsById(e)}catch(t){console.error("Paste failed:",t),alert("Couldn’t paste—check clipboard permissions!")}}),Z.addEventListener("click",()=>{Q.value="",searchPostsById("")}),L&&L.addEventListener("change",()=>{loadPosts(communityId,!0),carouselIndex=0,loadCarouselPosts(communityId)}),k&&k.addEventListener("change",()=>{loadPosts(communityId,!0),carouselIndex=0,loadCarouselPosts(communityId)}),B&&B.addEventListener("change",()=>{loadPosts(communityId,!0),carouselIndex=0,loadCarouselPosts(communityId)}),M&&M.addEventListener("click",()=>slideCarousel(-1)),x&&x.addEventListener("click",()=>slideCarousel(1)),D&&D.addEventListener("click",copyCommunityId),T&&T.addEventListener("click",createPost),A&&A.addEventListener("click",()=>viewMembers(communityId)),q&&q.addEventListener("click",()=>viewBannedUsers(communityId)),_&&_.addEventListener("click",()=>deleteCommunity(communityId)),U&&U.addEventListener("click",()=>leaveCommunity(communityId)),N&&N.addEventListener("click",()=>viewProfileViewRequests(e.uid)),R&&R.addEventListener("click",()=>closeModal("viewProfileModal")),H&&H.addEventListener("click",()=>closeModal("viewMembersModal")),F&&F.addEventListener("click",()=>closeModal("viewBannedModal")),O&&O.addEventListener("click",()=>closeModal("viewProfileViewRequestsModal")),z&&z.addEventListener("click",()=>openNotificationsModal(e.uid)),Y&&Y.addEventListener("click",()=>closeModal("notificationsModal")),G&&G.addEventListener("click",clearNotifications),V&&V.addEventListener("click",()=>loadPosts(communityId,!0)),j&&j.addEventListener("click",()=>editCommunityName(communityId)),K&&K.addEventListener("click",()=>viewCommunities(e.uid)),W&&W.addEventListener("click",()=>viewSavedPosts(e.uid)),J&&(J.removeEventListener("click",et),J.addEventListener("click",et)),ee&&ee.addEventListener("click",()=>viewFollowers(e.uid)),setupLocationAutocomplete(),setupCommunitySelection(),loadYourPosts(e.uid),loadPosts(communityId,!1),loadCarouselPosts(communityId),updateNotificationBadge(e.uid),await updateChatBadge(e.uid),await loadAdminReportSummary(e.uid)})});let reportSummaryCache=null;async function loadAdminReportSummary(e){if(!e){console.error("No userId provided to loadAdminReportSummary");return}let t=await getCommData(),a=t.admins?.includes(e)||t.creatorId===e,o=document.getElementById("admin-report-summary");if(o||((o=document.createElement("div")).id="admin-report-summary",o.className="admin-report-summary",document.querySelector(".community-page").insertBefore(o,document.querySelector(".top-bar").nextSibling)),reportSummaryCache){o.innerHTML=reportSummaryCache.html,attachSummaryListeners(o,a,e),console.log("Loaded report summary from cache!");return}await updateReportSummaryUI(o,e,a)}async function updateReportSummaryUI(e,t,a){let o=l(db,"communities",communityId,"postReports"),n=c(o),s=await m(n),i=Object.keys(s.docs.reduce((e,t)=>(e[t.data().postId]=!0,e),{})).length,r=0,d=0;if(a){let p=c(l(db,"communities",communityId,"banAppeals")),y=await m(p);d=y.size}else{let g=c(l(db,"communities",communityId,"posts"),u("userId","==",t)),f=await m(g),h=[];for(let b of f.docs){let $=b.id,w=c(o,u("postId","==",$)),v=await m(w);v.empty||h.push($)}r=h.length}let I=a?i+d:r;e.innerHTML=`
<details>
  <summary>${I>0?`(${I}) `:""}See Reports</summary>
  <div id="report-content" class="report-content"></div>
</details>
`,reportSummaryCache={html:e.innerHTML},attachSummaryListeners(e,a,t)}function attachSummaryListeners(e,t,a){let o=e.querySelector("details");o.addEventListener("toggle",async()=>{let n=e.querySelector("#report-content");if(o.open){if(n.innerHTML='<div class="loading">⏳ Loading...</div>',o.querySelector("summary").textContent=`${reportSummaryCache.html.match(/\(\d+\)/)||""}Hide Reports`,t){let r="",p=l(db,"communities",communityId,"postReports"),g=await m(c(p));if(g.empty)r+="<p>No reported posts!</p>";else{r+="<h3>Reported Posts</h3>";let f={};for(let[h,b]of(g.forEach(e=>{let t=e.data().postId;f[t]=(f[t]||0)+1}),Object.entries(f)))try{let $=await i(s(db,"communities",communityId,"posts",h)),w=$.exists()?$.data():null,v=w?w.title:"Deleted Post",I=w?await fetchUserData(w.userId):{name:"Unknown"};r+=`
                <div class="report-item" data-post-id="${h}">
                  <span>Post "${v}" by ${I.name} (ID: ${h}) - ${b} report${b>1?"s":""}</span>
                  <button class="remove-post-btn" data-post-id="${h}">Remove Post</button>
                  <button class="clear-reports-btn" data-post-id="${h}">Clear Reports</button>
                </div>
              `}catch(P){console.error(`Error loading post ${h}:`,P),r+=`<p>Error loading post ${h}</p>`}}try{let C=await m(l(db,"communities",communityId,"banAppeals")),E=(await i(s(db,"communities",communityId))).data()||{banReasons:{}};if(C.empty)r+="<br><h3>User Appeals</h3><p>No appeals yet.</p>";else for(let S of(r+="<br><h3>User Appeals (Bans/Posts)</h3>",C.docs)){let L=S.data(),k=await fetchUserData(L.userId),B=`${k.name||"Unknown"} (${L.username||"unknown"})`,M=E.banReasons?.[L.userId]||"No reason provided";r+=`
                <div class="appeal-item" data-appeal-id="${S.id}">
                  <p><strong>${B}:</strong> "${L.message}" (Ban Reason: ${M})</p>
                  <span>${new Date(L.timestamp.toDate()).toLocaleString()}</span>
                  <button class="delete-appeal-btn" data-appeal-id="${S.id}">Delete</button>
                </div>
              `}}catch(x){console.error("Error loading appeals:",x),r+="<br><p>Error loading appeals!</p>"}n.innerHTML=r,n.querySelectorAll(".remove-post-btn").forEach(e=>{e.addEventListener("click",()=>deletePost(e.dataset.postId))}),n.querySelectorAll(".clear-reports-btn").forEach(e=>{e.addEventListener("click",()=>clearReports(e.dataset.postId))}),n.querySelectorAll(".delete-appeal-btn").forEach(e=>{e.addEventListener("click",async()=>{confirm("Delete this appeal?")&&(await y(s(db,"communities",communityId,"banAppeals",e.dataset.appealId)),refreshReportSummary(a))})})}else{let D="",T=l(db,"communities",communityId,"postReports"),A=c(l(db,"communities",communityId,"posts"),u("userId","==",a));try{let q=await m(A),_=[];for(let U of q.docs){let N=U.id,R=c(T,u("postId","==",N)),H=await m(R);H.empty||_.push({postId:N,title:U.data().title,count:H.size})}if(0===_.length)D="<p>No reports on your posts!</p>";else for(let F of(D="<h3>Your Reported Posts</h3>",_)){let O=c(l(db,"communities",communityId,"banAppeals"),u("userId","==",a),u("postId","==",F.postId)),z=await m(O),Y=!z.empty;D+=`
                <div class="report-item" data-post-id="${F.postId}">
                  <p>Post "${F.title}" (ID: ${F.postId}) has ${F.count} report${F.count>1?"s":""}</p>
                  ${F.count>=2?'<p style="color: red;">Hidden from others!</p>':""}
                  <div class="appeal-container" data-post-id="${F.postId}">
                    ${Y?"<p>Appeal sent, waiting on admins.</p>":`
                      <form class="appeal-form" data-post-id="${F.postId}">
                        <textarea placeholder="Appeal to admins (e.g., 'Not breaking rules because...')" required></textarea>
                        <button type="submit">Send Appeal</button>
                      </form>
                    `}
                  </div>
                </div>
              `}}catch(G){console.error("Error loading user reports:",G),D="<p>Error loading your reports!</p>"}n.innerHTML=D,n.querySelectorAll(".appeal-form").forEach(e=>{e.addEventListener("submit",async t=>{t.preventDefault();let o=e.dataset.postId,n=e.querySelector("textarea").value.trim();if(n){let r=await i(s(db,"users",a)),c=r.exists()?r.data():{username:`user_${a.slice(0,8)}`};await d(l(db,"communities",communityId,"banAppeals"),{userId:a,username:c.username,postId:o,message:n,timestamp:new Date}),alert("Appeal sent!"),e.closest(".appeal-container").innerHTML="<p>Appeal sent, waiting on admins.</p>",refreshReportSummary(a)}})})}}else o.querySelector("summary").textContent=`${reportSummaryCache.html.match(/\(\d+\)/)||""}See Reports`,n.innerHTML=""})}function refreshReportSummary(e){reportSummaryCache=null,loadAdminReportSummary(e)}let debouncedLoadAdminReportSummary=debounce(e=>loadAdminReportSummary(e),500);async function createPost(){let e=document.getElementById("createPostBtn");if(!e){console.error("Create Post button not found!");return}if(e.disabled){console.log("Post creation in progress, ignoring extra click.");return}e.disabled=!0;let t=e.textContent;e.textContent="Creating...",e.classList.add("loading");try{let a=auth.currentUser,o=document.getElementById("postTitle").value.trim(),n=document.getElementById("postDescription").value.trim(),r=document.getElementById("postPhotos").files,c=document.getElementById("postLocation").value.trim(),u=document.getElementById("postLocation").dataset.lat,m=document.getElementById("postLocation").dataset.lon,p=document.querySelectorAll("#communityCheckboxes input[name='communities']:checked"),y=document.getElementById("category").value,g=document.getElementById("lookingFor").value,f=document.getElementById("offering").value;if(!o||!n||!c||!u||!m||!y||!g||!f)throw alert("Fill out all fields, pick a category, and select what you're looking for and offering!"),Error("Missing required fields");if(0===p.length)throw alert("Pick at least one community to post!"),Error("No communities selected");let h=Array.from(p).map(e=>e.value);if(1===h.length&&"all"===h[0]){let b=s(db,"users",a.uid),$=await i(b);h=$.data().communityIds||[];let w=[];for(let v of h){let I=s(db,"communities",v),P=await i(I),L=P.data();L.members.includes(a.uid)&&!(L.bannedUsers||[]).includes(a.uid)&&w.push(v)}h=w}else h=h.map(e=>"current"===e?communityId:e);if(0===h.length)throw alert("No valid communities selected!"),Error("No valid communities");let k={};for(let B of h){k[B]=[];for(let M=0;M<Math.min(r.length,5);M++){let x=await compressImage(r[M]),D=C(storage,`posts/${B}/${a.uid}/${Date.now()}_${M}`);await E(D,x);let T=await S(D);k[B].push(T)}}let A=h.map(e=>{let t={title:o,description:n,photoUrls:k[e],location:{latitude:parseFloat(u),longitude:parseFloat(m),name:c},userId:a.uid,createdAt:new Date,category:y,lookingFor:g,offering:f,communityId:e,likes:0,likedBy:[],commentCount:0};return d(l(db,"communities",e,"posts"),t)}),q=await Promise.all(A);alert(`Post created in ${h.length} communit${h.length>1?"ies":"y"}! IDs: ${q.map(e=>e.id).join(", ")}`),document.getElementById("newPostForm").reset(),totalYourPosts=0,loadYourPosts(a.uid),loadPosts(communityId,!0),totalCarouselPosts=0,carouselIndex=0,loadCarouselPosts(communityId)}catch(_){console.error("Error creating post:",_),_.message.includes("Missing")||_.message.includes("communities")||alert(`Failed to create post: ${_.message}`)}finally{e.disabled=!1,e.textContent=t,e.classList.remove("loading")}}async function setupCommunitySelection(){let e=auth.currentUser;if(!e){console.error("No authenticated user found for setupCommunitySelection!");return}let t=s(db,"users",e.uid),a=await i(t),o=a.data().communityIds||[],n=document.getElementById("communityCheckboxes");if(!n){console.error("communityCheckboxes div not found in DOM yet!");return}n.innerHTML="";let r=s(db,"communities",communityId),d=await i(r),l=d.data().name;n.innerHTML+=`
<label for="comm-current">
  <input type="checkbox" id="comm-current" name="communities" value="current" checked> Current (${l})
</label>
`,n.innerHTML+=`
<label for="comm-all">
  <input type="checkbox" id="comm-all" name="communities" value="all"> All Communities
</label>
`;let c=o.filter(e=>e!==communityId).map(e=>i(s(db,"communities",e))),u=await Promise.all(c);for(let m of u)if(m.exists()){let p=m.data(),y=s(db,"communities",m.id,"members",e.uid),g=await i(y),f=g.exists(),h=(p.bannedUsers||[]).includes(e.uid);if(f&&!h){let b=document.createElement("label");b.setAttribute("for",`comm-${m.id}`),b.innerHTML=`
      <input type="checkbox" id="comm-${m.id}" name="communities" value="${m.id}"> ${p.name}
    `,n.appendChild(b)}}let $=n.querySelector('input[value="all"]');$.addEventListener("change",e=>{let t=n.querySelectorAll('input[name="communities"]:not([value="all"])');e.target.checked&&t.forEach(e=>e.checked=!1)});let w=n.querySelectorAll('input[name="communities"]:not([value="all"])');w.forEach(e=>{e.addEventListener("change",()=>{e.checked&&($.checked=!1)})})}async function deletePost(e){let t=auth.currentUser,a=await getCommData(),o=a.admins?.includes(t.uid)||a.creatorId===t.uid,n=s(db,"communities",communityId,"posts",e),r=await i(n);if(!r.exists()){alert("Post not found!");return}let d=r.data();if(!o&&d.userId!==t.uid){alert("You can’t delete this post!");return}let l=document.getElementById("deletePostModal"),c=document.getElementById("swappedBtn"),u=document.getElementById("justDeleteBtn"),m=document.getElementById("swapDetails"),p=document.getElementById("swapUsername"),y=document.getElementById("validateSwapBtn"),g=document.getElementById("swapValidationResult"),f=document.getElementById("swapConfirmed"),h=document.getElementById("swapPartner"),b=document.getElementById("editSwapBtn"),$=document.getElementById("proceedSwapBtn"),w=document.getElementById("swapSuccess"),v=document.getElementById("swapSuccessMessage"),I=document.getElementById("closeDeleteModalBtn"),P=document.getElementById("loadingOverlay");if(!l||!P||!c||!u||!m||!p||!y||!g||!f||!h||!b||!$||!w||!v||!I){console.error("Missing modal or loading elements:",{modal:l,loadingOverlay:P,swappedBtn:c,justDeleteBtn:u,swapDetails:m,swapUsername:p,validateSwapBtn:y,swapValidationResult:g,swapConfirmed:f,swapPartner:h,editSwapBtn:b,proceedSwapBtn:$,swapSuccess:w,swapSuccessMessage:v,closeDeleteModalBtn:I}),alert("Error: Modal setup incomplete. Please refresh the page.");return}let C=null;l.style.display="flex",l.classList.remove("hidden"),m.classList.add("hidden"),w.classList.add("hidden"),g.textContent="",f.classList.add("hidden"),$.classList.add("hidden"),u.onclick=async()=>{if(u.disabled){console.log("Deletion already in progress, ignoring click.");return}if(confirm("Delete this post from this community? It may still exist in other communities you posted to.")){u.disabled=!0;let a=u.textContent;u.textContent="Deleting...",u.classList.add("loading"),P.classList.remove("hidden");try{await deletePostAndCleanup(e,d.photoUrls,!1,null),closeModal("deletePostModal"),refreshReportSummary(t.uid)}catch(o){console.error("Deletion failed:",o),alert("Something went wrong. Please try again.")}finally{P.classList.add("hidden"),u.disabled=!1,u.textContent=a,u.classList.remove("loading")}}},c.onclick=()=>{m.classList.remove("hidden"),u.style.display="none",c.style.display="none",p.focus()},y.onclick=async()=>{let e=p.value.trim();if(!e){g.textContent="Please enter a username.";return}g.textContent="Checking...";let t=await getUserByUsername(e);t?(C=t.uid,h.textContent=e,g.textContent="",f.classList.remove("hidden"),$.classList.remove("hidden"),p.disabled=!0,y.disabled=!0):(g.textContent="User not found.",C=null)},b.onclick=()=>{f.classList.add("hidden"),$.classList.add("hidden"),p.disabled=!1,y.disabled=!1,p.value="",g.textContent="",p.focus()},$.onclick=async()=>{if($.disabled){console.log("Swap deletion already in progress, ignoring click.");return}if(!C){g.textContent="No valid user selected.";return}let a=h.textContent;if(confirm(`Mark this post as swapped with ${a} in this community? It may still exist in other communities.`)){$.disabled=!0;let o=$.textContent;$.textContent="Deleting...",$.classList.add("loading"),P.classList.remove("hidden");try{await deletePostAndCleanup(e,d.photoUrls,!0,C),m.classList.add("hidden"),w.classList.remove("hidden"),v.textContent=`Thanks! You and ${a} swapped this item. Help us continue our service free. Tip us!`,I.textContent="Close",refreshReportSummary(t.uid)}catch(n){console.error("Swap and deletion failed:",n),alert("Something went wrong during the swap. Please try again.")}finally{P.classList.add("hidden"),$.disabled=!1,$.textContent=o,$.classList.remove("loading")}}},I.onclick=()=>closeModal("deletePostModal")}async function deletePostAndCleanup(e,t,a,o){let n=s(db,"communities",communityId,"posts",e),i=l(db,"communities",communityId,"posts",e,"comments");await w(db,async e=>{if(a&&o){let t=s(db,"users",auth.currentUser.uid),i=s(db,"users",o),r=await e.get(t),d=await e.get(i);if(!r.exists()||!d.exists())throw Error("User or partner not found.");let l=(r.data().swaps||0)+1,c=(d.data().swaps||0)+1;e.update(t,{swaps:l}),e.update(i,{swaps:c})}e.delete(n)}),await deleteCollection(i);let r=t.map(e=>{let t=C(storage,e);return L(t).catch(e=>console.error("Failed to delete photo:",e))});await Promise.all(r);let d=document.getElementById(`post-${e}`);d?(d.remove(),console.log(`Removed post-${e} from DOM`)):console.log(`Post-${e} not found in DOM—already gone or never rendered`),postCache.delete(e),loadedPostIds.delete(e),PaginationState.displayedPostIds.delete(e),totalYourPosts=0,await loadYourPosts(auth.currentUser.uid),await loadPosts(communityId,!0),totalCarouselPosts=0,carouselIndex=0,await loadCarouselPosts(communityId)}async function deleteCollection(e,t=500){let a=c(e,p(t)),o=await m(a);if(o.empty)return;let n=v(db);for(let s of o.docs){let i=l(db,s.ref.path,"replies");await deleteCollection(i,t),n.delete(s.ref)}await n.commit(),o.size===t&&await deleteCollection(e,t)}function setupYourPostsCarousel(e){let t=document.getElementById(`carousel-${e}-your`),a=t.querySelector(`.carousel-prev[data-post-id="${e}-your"]`),o=t.querySelector(`.carousel-next[data-post-id="${e}-your"]`),n=t.querySelector(".carousel-image"),s=JSON.parse(t.dataset.photos||"[]");if(!a||!o||!n){console.error(`Your Posts carousel setup failed for post ${e}: missing elements`);return}0===s.length&&(s=["https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430","https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430"]),n.src=s[0],n.dataset.index="0";let i=0;a.removeEventListener("click",a._carouselHandler),o.removeEventListener("click",o._carouselHandler),a._carouselHandler=e=>{e.preventDefault(),e.stopPropagation(),i=(i-1+s.length)%s.length,n.src=s[i],n.dataset.index=i},o._carouselHandler=e=>{e.preventDefault(),e.stopPropagation(),i=(i+1)%s.length,n.src=s[i],n.dataset.index=i},a.addEventListener("click",a._carouselHandler),o.addEventListener("click",o._carouselHandler)}function setupCommunityCarousel(e){let t=document.getElementById(`carousel-${e}-community`),a=t.querySelector(`.carousel-prev[data-post-id="${e}-community"]`),o=t.querySelector(`.carousel-next[data-post-id="${e}-community"]`),n=t.querySelector(".carousel-image"),s=JSON.parse(t.dataset.photos||"[]");if(!a||!o||!n){console.error(`Community carousel setup failed for post ${e}: missing elements`);return}0===s.length&&(s=["https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430","https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430"]),n.src=s[0],n.dataset.index="0";let i=0;a.removeEventListener("click",a._carouselHandler),o.removeEventListener("click",o._carouselHandler),a._carouselHandler=e=>{e.preventDefault(),e.stopPropagation(),i=(i-1+s.length)%s.length,n.src=s[i],n.dataset.index=i},o._carouselHandler=e=>{e.preventDefault(),e.stopPropagation(),i=(i+1)%s.length,n.src=s[i],n.dataset.index=i},a.addEventListener("click",a._carouselHandler),o.addEventListener("click",o._carouselHandler)}let lastCarouselDoc=null,firstCarouselDoc=null,totalCarouselPosts=0,lastFilterState={lookingFor:"",offering:""},cachedMemberCount=null;async function getMemberCount(e){if(null!==cachedMemberCount)return cachedMemberCount;let t=s(db,"communities",e),a=await i(t);return a.exists()?cachedMemberCount=a.data().memberCount||0:(console.error("Community not found!"),0)}async function loadCarouselPosts(e,t=1){let a=document.getElementById("carouselTrack"),o=document.getElementById("carouselPrevBtn"),n=document.getElementById("carouselNextBtn"),s=document.getElementById("lookingForFilter")?.value||"",i=document.getElementById("offeringFilter")?.value||"",r=window.innerWidth<768?2:4;a.innerHTML='<div class="loading">⏳ Loading...</div>';let d=await getMemberCount(e),y=Math.max(5,Math.ceil(.01*d)),$={lookingFor:s,offering:i};if(0===totalCarouselPosts||lastFilterState.lookingFor!==$.lookingFor||lastFilterState.offering!==$.offering){let w=c(l(db,"communities",e,"posts"),u("likes",">=",y),...s?[u("lookingFor","==",s)]:[],...i?[u("offering","==",i)]:[]);totalCarouselPosts=(await m(w)).size,lastFilterState=$,console.log(`Total trending posts for ${e}: ${totalCarouselPosts}`)}let v=Math.max(0,Math.ceil(totalCarouselPosts/r)-1);carouselIndex<0?carouselIndex=v:carouselIndex>v&&(carouselIndex=0);let I=c(l(db,"communities",e,"posts"),u("likes",">=",y),...s?[u("lookingFor","==",s)]:[],...i?[u("offering","==",i)]:[],b("likes","desc"));t>0&&carouselIndex>0&&lastCarouselDoc&&carouselIndex<=v?I=c(I,f(lastCarouselDoc),p(r)):t<0&&carouselIndex>=0&&firstCarouselDoc&&carouselIndex<v?I=c(I,h(firstCarouselDoc),g(r)):0===carouselIndex||totalCarouselPosts<=r?I=c(I,p(r)):carouselIndex===v&&(I=c(l(db,"communities",e,"posts"),u("likes",">=",y),...s?[u("lookingFor","==",s)]:[],...i?[u("offering","==",i)]:[],b("likes","desc"),g(r)));let P=await m(I),C=P.docs.map(t=>({id:t.id,...t.data(),communityId:e}));if(P.docs.length>0)lastCarouselDoc=P.docs[P.docs.length-1],firstCarouselDoc=P.docs[0];else{t>0?(carouselIndex=0,I=c(l(db,"communities",e,"posts"),u("likes",">=",y),...s?[u("lookingFor","==",s)]:[],...i?[u("offering","==",i)]:[],b("likes","desc"),p(r))):t<0&&(carouselIndex=v,I=c(l(db,"communities",e,"posts"),u("likes",">=",y),...s?[u("lookingFor","==",s)]:[],...i?[u("offering","==",i)]:[],b("likes","desc"),g(r)));let E=await m(I);C.push(...E.docs.map(t=>({id:t.id,...t.data(),communityId:e}))),E.docs.length>0&&(lastCarouselDoc=E.docs[E.docs.length-1],firstCarouselDoc=E.docs[0])}for(let S of(C.forEach(t=>{postCache.has(t.id)||(postCache.set(t.id,t),console.log(`Cached carousel post ${t.id} for ${e}`))}),a.innerHTML=0===C.length?'<p class="no-posts">No trending posts yet!</p>':"",C)){if(S.communityId!==e){console.log(`Skipping carousel post ${S.id}—belongs to ${S.communityId}, not ${e}`);continue}let L=await fetchUserData(S.userId),k=document.createElement("div");k.className="carousel-post",k.innerHTML=`
  <h4>${S.title||"Untitled"}</h4>
  <p class="highlight">Looking For: ${S.lookingFor||"N/A"}</p>
  <p class="highlight">Offering: ${S.offering||"N/A"}</p>
  <p>❤️ Likes: ${S.likes||0}</p>
  <p>By: <span class="username" data-uid="${S.userId}">${L.name||"Unknown"}</span></p>
  <button class="copy-btn" data-post-id="${S.id}">Copy Post ID</button>
`,a.appendChild(k),k.querySelector(".username").addEventListener("click",()=>viewProfile(S.userId)),k.querySelector(".copy-btn").addEventListener("click",e=>{e.stopPropagation(),copyPostId(S.id)})}o.disabled=0===totalCarouselPosts,n.disabled=0===totalCarouselPosts,console.log(`Loaded carousel posts for community ${e}, index: ${carouselIndex}`)}function slideCarousel(e){carouselIndex+=e,loadCarouselPosts(communityId,e)}let delay=e=>new Promise(t=>setTimeout(t,e)),POST_CACHE_KEY=`postCache_${communityId}`,LIKED_PREFS_KEY=`likedPrefs_${communityId}`,CACHE_TIMESTAMP_KEY=`cacheTimestamp_${communityId}`,CACHE_EXPIRY_HOURS=8,PaginationState={POSTS_PER_PAGE:10,currentPage:1,displayedPostIds:new Set};function isCacheExpired(){let e=sessionStorage.getItem(CACHE_TIMESTAMP_KEY);if(!e)return!0;let t=Date.now()-parseInt(e);return t>288e5}function resetCache(){sessionStorage.removeItem(POST_CACHE_KEY),sessionStorage.removeItem(LIKED_PREFS_KEY),sessionStorage.setItem(CACHE_TIMESTAMP_KEY,Date.now().toString())}function getLikedPrefs(){isCacheExpired()&&resetCache();let e=sessionStorage.getItem(LIKED_PREFS_KEY);if(!e)return{categories:new Set,offerings:new Set};let t=JSON.parse(e);return{categories:new Set(t.categories),offerings:new Set(t.offerings)}}function addLikedPref(e,t){let a=getLikedPrefs();a.categories.add(e),a.offerings.add(t),sessionStorage.setItem(LIKED_PREFS_KEY,JSON.stringify({categories:Array.from(a.categories),offerings:Array.from(a.offerings)}))}function normalizePostData(e){return{...e,createdAt:e.createdAt instanceof Object&&"toDate"in e.createdAt?e.createdAt.toDate():new Date(e.createdAt)}}function getCachedPosts(){isCacheExpired()&&resetCache();let e=sessionStorage.getItem(POST_CACHE_KEY);if(!e)return new Map;let t=JSON.parse(e);return new Map(t.map(([e,t])=>(t.data.createdAt=new Date(t.data.createdAt),[e,t])))}function setCachedPosts(e){let t=new Map(Array.from(e.entries()).map(([e,t])=>[e,{...t,data:{...t.data,createdAt:t.data.createdAt.toISOString()}}]));if(t.size>1e3){let a=t.size-1e3,o=Array.from(t.keys()).slice(0,a);o.forEach(e=>t.delete(e)),console.log(`Trimmed ${a} oldest posts from cache`)}sessionStorage.setItem(POST_CACHE_KEY,JSON.stringify(Array.from(t.entries()))),sessionStorage.getItem(CACHE_TIMESTAMP_KEY)||sessionStorage.setItem(CACHE_TIMESTAMP_KEY,Date.now().toString())}function getPostScore(e,t){let a=Date.now(),o=(a-e.createdAt.getTime())/36e5,n=Math.min(e.likes||0,50)/50,s=Math.min(e.commentCount||0,20)/20,i=.4*n+.4*s+.2*(Math.max(0,30-o/24)/30),r=new Set(t.categories),d=new Set(t.offerings);return(r.has(e.category)||d.has(e.offering))&&(i+=.3),o<24&&(i+=.5),Math.min(1.5,i)}async function loadPosts(e,t=!1,a=PaginationState.currentPage){if(isFetching||isSearching)return;isFetching=!0;let o=document.getElementById("postList"),n=document.getElementById("caughtUpMessage"),i={category:document.getElementById("categoryFilter")?.value||"",lookingFor:document.getElementById("lookingForFilter")?.value||"",offering:document.getElementById("offeringFilter")?.value||""};t&&(o.innerHTML="",n.style.display="none",loadedPostIds.clear(),PaginationState.displayedPostIds.clear(),lastPostDoc=null,postCache.clear(),PaginationState.currentPage=1,resetCache(),console.log(`Reset post list and caches for community ${e}`)),PaginationState.currentPage=a;let r=getCachedPosts(),d=getLikedPrefs(),y=null;if(r.size>0){let g=Array.from(r.values()).filter(t=>t.data.communityId===e).map(e=>e.data.createdAt.getTime());y=g.length>0?Math.max(...g):null,console.log(`Using ${g.length} cached posts for ${e}, last cached at: ${y?new Date(y).toLocaleString():"N/A"}`)}else console.log(`No cached posts found for ${e}—fetching fresh batch.`);let h=(PaginationState.currentPage-1)*PaginationState.POSTS_PER_PAGE,$=h+PaginationState.POSTS_PER_PAGE,w=Array.from(r.values()).filter(t=>t.data.communityId===e).map(e=>({...e,score:getPostScore(e.data,d)})).filter(e=>(!i.category||e.data.category===i.category)&&(!i.lookingFor||e.data.lookingFor===i.lookingFor)&&(!i.offering||e.data.offering===i.offering)).sort((e,t)=>t.score-e.score),v=w.slice(h,$).filter(e=>!PaginationState.displayedPostIds.has(e.id)),I=v.length===PaginationState.POSTS_PER_PAGE||h+v.length>=w.length;if(!I||t||0===r.size){let P=c(l(db,"communities",e,"posts"),...i.category?[u("category","==",i.category)]:[],...i.lookingFor?[u("lookingFor","==",i.lookingFor)]:[],...i.offering?[u("offering","==",i.offering)]:[],b("createdAt","desc"),p(25),...lastPostDoc&&!t?[f(lastPostDoc)]:[],...y&&!t?[u("createdAt",">",new Date(y))]:[]);try{let C=await m(P),E=C.docs.map(t=>({id:t.id,data:{...normalizePostData(t.data()),communityId:e},score:getPostScore(normalizePostData(t.data()),d)}));console.log(`Fetched ${E.length} new posts for ${e} (25 reads)`),E.forEach(e=>r.set(e.id,e)),setCachedPosts(r),w=Array.from(r.values()).filter(t=>t.data.communityId===e).map(e=>({...e,score:getPostScore(e.data,d)})).filter(e=>(!i.category||e.data.category===i.category)&&(!i.lookingFor||e.data.lookingFor===i.lookingFor)&&(!i.offering||e.data.offering===i.offering)).sort((e,t)=>t.score-e.score)}catch(S){console.error(`Failed to load posts for ${e}:`,S),o.innerHTML="<p>Oops, something broke! Refresh.</p>",isFetching=!1;return}}let L=w.slice(h,$).filter(e=>!PaginationState.displayedPostIds.has(e.id));if(console.log(`Showing ${L.length} posts for ${e} on page ${PaginationState.currentPage}`),0!==L.length||initialPostsLoaded){totalPosts=totalPosts||parseInt(sessionStorage.getItem(`totalPosts_${e}`))||await getTotalPosts(e),sessionStorage.setItem(`totalPosts_${e}`,totalPosts),initialPostsLoaded=!0,L.forEach(e=>postCache.set(e.id,{id:e.id,data:e.data}));let k=c(l(s(db,"users",auth.currentUser.uid),"savedPosts"),u("communityId","==",e)),B=await m(k),M=new Set(B.docs.map(e=>e.data().postId));o.innerHTML="",PaginationState.displayedPostIds.clear(),await renderPosts({docs:L.map(e=>({id:e.id,data:()=>e.data}))},o,M),addPaginationControls(o,w.length,e),n.style.display=PaginationState.currentPage*PaginationState.POSTS_PER_PAGE>=totalPosts?"block":"none"}else o.innerHTML="<p>No new posts to show!</p>",n.style.display="none";isFetching=!1}async function renderPosts(e,t,a){let o=await getCommData(),n=o?.admins?.includes(auth.currentUser.uid)||o?.creatorId===auth.currentUser.uid,d=[...new Set(e.docs.map(e=>e.data().userId).filter(Boolean))];for(let u of(await fetchUserData(d),e.docs)){let p=u.id;if(PaginationState.displayedPostIds.has(p))continue;if(PaginationState.displayedPostIds.size>=PaginationState.POSTS_PER_PAGE)break;let y=postCache.get(p)?.data||u.data();if(y.communityId&&y.communityId!==communityId){console.log(`Skipping post ${p}—belongs to ${y.communityId}, not ${communityId}`);continue}PaginationState.displayedPostIds.add(p),loadedPostIds.add(p);let g=userDataCache[y.userId]||{profilePhoto:"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y",name:"Unknown",username:"unknown"},f=o?.admins?.includes(y.userId)||o?.creatorId===y.userId,h=c(l(db,"communities",communityId,"posts",p,"comments"),b("createdAt","desc")),$=await m(h),w=$.size,v=y.createdAt?new Date(y.createdAt).toLocaleString():"N/A",I=y.photoUrls||[],P=I.length,C=await getPostReportStatus(p),E=a.has(p),S=categoryDisplayMap[y.category]||y.category;if(C?.isHidden){PaginationState.displayedPostIds.delete(p),loadedPostIds.delete(p);continue}let L=document.createElement("div");L.className="post",L.id=`post-${p}`,L.innerHTML=`
  <div class="post-header">
    <img loading="lazy" src="${g.profilePhoto}" class="profile-photo" alt="Profile">
    <h3><span class="username" data-uid="${y.userId}">${g.name}</span> <span class="at-user">@${g.username}</span> ${f?'<span class="admin-tag">Admin</span>':""}</h3>
  </div>
  <h3>${y.title||"Untitled"}</h3>
  <p class="post-description">${y.description||""}</p>
  <div class="photo-carousel" id="carousel-${p}-community" data-photos='${JSON.stringify(I)}'>
    ${P>1?`<button class="carousel-prev" data-post-id="${p}-community"><</button>`:""}
    <img loading="lazy" src="${I[0]||"https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430"}" alt="Post photo" class="carousel-image" data-index="0">
    ${P>1?`<button class="carousel-next" data-post-id="${p}-community">></button>`:""}
  </div>
  <p>Location: ${y.location?.name||"N/A"}</p>
  <p>Category: ${S}</p>
  <p class="highlight">Looking For: ${y.lookingFor||"N/A"} | Offering: ${y.offering||"N/A"}</p>
  <p class="timestamp">${v}</p>
  <p class="post-id">Post ID: ${p} <button class="copy-btn" data-post-id="${p}">Copy</button></p>
  <button class="like-btn" data-post-id="${p}">${(y.likedBy||[]).includes(auth.currentUser.uid)?"\uD83D\uDC94 Unlike":"❤️ Like"} (${y.likes||0})</button>
  <button class="save-toggle-btn" data-post-id="${p}" data-community-id="${communityId}">${E?"\uD83D\uDDD1️ Unsave":"\uD83D\uDCBE Save"}</button>
  <button class="report-btn" id="reportPost-${p}">Report Post</button>
  <br><br>
  ${y.userId===auth.currentUser.uid||n?`<button class="delete-btn" id="deletePost-${p}">Delete Post</button>`:""}
  ${C?.isOwner&&1===C.reportCount?`
    <div class="report-warning" id="warning-${p}">
      This post has 1 report. One more hides it—check summary!
    </div>`:""}
  ${C?.isOwner&&C.reportCount>=2?`
    <div class="report-warning" id="warning-${p}">
      This post has ${C.reportCount} reports and is hidden. Appeal above!
    </div>`:""}
  ${n&&C?.reportCount>0?`
    <div class="admin-report-controls" id="admin-controls-${p}">
      This post has ${C.reportCount} report${C.reportCount>1?"s":""}.
      <button class="remove-post-btn" data-post-id="${p}">Remove Post</button>
      <button class="clear-reports-btn" data-post-id="${p}">Clear Reports</button>
    </div>`:""}
  <div class="comments-section">
    <a href="#" class="comment-count" id="toggleComments-${p}">${w} comments</a>
    <div class="comments-thread" id="comments-${p}" style="display: none;"></div>
    <form id="commentForm-${p}" class="comment-form">
      <textarea placeholder="Add a comment..." required></textarea>
      <div id="tagSuggestions-${p}" class="suggestions hidden"></div>
      <button type="submit">Comment</button>
    </form>
  </div>
`,t.appendChild(L);let B=L.querySelector(`.like-btn[data-post-id="${p}"]`);B.addEventListener("click",async()=>{let e=s(db,"communities",communityId,"posts",p),t=await i(e);if(!t.exists()){alert("Post not found—might’ve been deleted!");return}let a=normalizePostData(t.data()),o=auth.currentUser.uid,n=a.likedBy||[],d=a.likes||0,l=[...n];n.includes(o)?(l=l.filter(e=>e!==o),d=Math.max(0,d-1)):(l.push(o),d+=1,addLikedPref(a.category,a.offering)),await r(e,{likes:d,likedBy:l}),B.textContent=`${n.includes(o)?"❤️ Like":"\uD83D\uDC94 Unlike"} (${d})`;let c=getCachedPosts();c.set(p,{id:p,data:{...a,likes:d,likedBy:l,communityId}}),setCachedPosts(c)});let M=L.querySelector(`.save-toggle-btn[data-post-id="${p}"]`);M.replaceWith(M.cloneNode(!0));let x=L.querySelector(`.save-toggle-btn[data-post-id="${p}"]`),D=!1;x.addEventListener("click",e=>{e.preventDefault(),D||(D=!0,"Unsave"===x.textContent?deleteSavedPostFromPost(p,communityId,x).then(()=>D=!1).catch(()=>D=!1):savePost(p,communityId,x).then(()=>D=!1).catch(()=>D=!1))}),L.querySelector(`.username[data-uid="${y.userId}"]`)?.addEventListener("click",()=>viewProfile(y.userId)),L.querySelector(`#toggleComments-${p}`)?.addEventListener("click",e=>{e.preventDefault(),k(p)}),L.querySelector(`#commentForm-${p}`)?.addEventListener("submit",e=>{e.preventDefault(),addComment(p,y.userId)}),L.querySelector(`#deletePost-${p}`)?.addEventListener("click",()=>deletePost(p)),L.querySelector(`#reportPost-${p}`)?.addEventListener("click",()=>reportPost(p)),L.querySelector(`.copy-btn[data-post-id="${p}"]`)?.addEventListener("click",e=>{e.stopPropagation(),copyPostId(p)}),n&&(L.querySelector(`.remove-post-btn[data-post-id="${p}"]`)?.addEventListener("click",()=>deletePost(p)),L.querySelector(`.clear-reports-btn[data-post-id="${p}"]`)?.addEventListener("click",()=>clearReports(p)));let T=L.querySelector(`#commentForm-${p} textarea`);T&&(T._debouncedInput&&T.removeEventListener("input",T._debouncedInput),T._debouncedInput=debounce(e=>showTagSuggestions(e.target,p),500),T.addEventListener("input",T._debouncedInput)),P>1&&setupCommunityCarousel(p)}}function addPaginationControls(e,t,a){let o=Math.ceil(t/PaginationState.POSTS_PER_PAGE),n=document.createElement("div");if(n.className="pagination",PaginationState.currentPage>1){let s=document.createElement("button");s.textContent="<",s.addEventListener("click",async()=>{PaginationState.currentPage>1&&(e.innerHTML='<div class="loading">⏳ Loading...</div>',await loadPosts(a,!1,PaginationState.currentPage-1))}),n.appendChild(s)}let i=[1];if(o<=5)for(let r=2;r<=o;r++)i.push(r);else{let d=[PaginationState.currentPage-1,PaginationState.currentPage,PaginationState.currentPage+1].filter(e=>e>1&&e<o);i.push(...d),i.includes(o)||i.push(o),PaginationState.currentPage>3&&!i.includes(2)&&i.push(2),PaginationState.currentPage<o-2&&!i.includes(o-1)&&i.push(o-1),i.sort((e,t)=>e-t)}if(i.forEach((t,o)=>{if(o>0&&t-i[o-1]>1){let s=document.createElement("span");s.textContent="...",n.appendChild(s)}let r=document.createElement("button");r.textContent=t,r.className=t===PaginationState.currentPage?"active":"",t===PaginationState.currentPage?r.disabled=!0:r.addEventListener("click",async()=>{e.innerHTML='<div class="loading">⏳ Loading...</div>',await loadPosts(a,!1,t)}),n.appendChild(r)}),PaginationState.currentPage<o){let l=document.createElement("button");l.textContent=">",l.addEventListener("click",async()=>{PaginationState.currentPage<o&&(e.innerHTML='<div class="loading">⏳ Loading...</div>',await loadPosts(a,!1,PaginationState.currentPage+1))}),n.appendChild(l)}e.appendChild(n)}document.getElementById("categoryFilter")?.addEventListener("change",()=>loadPosts(communityId,!0)),document.getElementById("lookingForFilter")?.addEventListener("change",()=>loadPosts(communityId,!0)),document.getElementById("offeringFilter")?.addEventListener("change",()=>loadPosts(communityId,!0)),document.getElementById("refreshPostsBtn").addEventListener("click",async()=>{await loadPosts(communityId,!0)});let totalYourPosts=0;async function loadYourPosts(e){let t=document.getElementById("yourPostsList");t.innerHTML="";let a=null,o=null,n=new Set;async function s(s=!1){let r=await getCommData(),d=r.admins?.includes(auth.currentUser.uid)||r.creatorId===auth.currentUser.uid;await fetchUserData(e);let y=s?0:window.scrollY||document.documentElement.scrollTop;if(!totalYourPosts||s){let g=c(l(db,"communities",communityId,"posts"),u("userId","==",e));totalYourPosts=(await m(g)).size}let h=c(l(db,"communities",communityId,"posts"),u("userId","==",e),b("createdAt","desc"),p(2));a&&!s?h=c(h,f(a)):s&&(o=null);try{let $=await m(h);if($.empty&&0===n.size){t.innerHTML="<p>No posts yet!</p>",await i(),s?document.getElementById("scroll-to-ur-posts")?.scrollIntoView({behavior:"smooth"}):window.scrollTo(0,y);return}o||(o=$.docs[0]),a=$.docs[$.docs.length-1],s&&(t.innerHTML="",n.clear());let w=$.docs.map(e=>e.id),v=await Promise.all(w.map(getPostReportStatus));for(let I=0;I<$.docs.length;I++){let P=$.docs[I],C=v[I];if(n.has(P.id))continue;n.add(P.id);let E=P.data();if(!E.userId){console.error(`Post ${P.id} has no userId! Post data:`,E),t.innerHTML+=`<div class="post-error">Error: Post ${P.id} is missing user data.</div>`;continue}let S=userDataCache[E.userId],L=r.admins?.includes(E.userId)||r.creatorId===E.userId,k=new Date(E.createdAt.toDate()).toLocaleString(),B=E.photoUrls||[],M=B.length,x=document.createElement("div");x.className="post",x.id=`post-${P.id}`,x.innerHTML=`
      <div class="post-header">
        <img loading="lazy" src="${S.profilePhoto||"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y"}" class="profile-photo" alt="Profile">
        <h3><span class="username" data-uid="${E.userId}">${S.name}</span> <span class="at-user">@${S.username}</span> ${L?'<span class="admin-tag">Admin</span>':""}</h3>
      </div>
      <h3>${E.title}</h3>
      <p class="post-description">${E.description}</p>
      <div class="photo-carousel" id="carousel-${P.id}-your" data-photos='${JSON.stringify(B)}'>
        ${M>1?`<button class="carousel-prev" data-post-id="${P.id}-your"><</button>`:""}
        <img loading="lazy" src="${B[0]||"https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430"}" alt="Post photo" class="carousel-image" data-index="0">
        ${M>1?`<button class="carousel-next" data-post-id="${P.id}-your">></button>`:""}
      </div>
      <p>Location: ${E.location.name}</p>
      <p class="highlight">Category: ${E.category||"N/A"} | Looking For: ${E.lookingFor||"N/A"} | Offering: ${E.offering||"N/A"}</p>
      <p class="timestamp">${k}</p>
      <p class="post-id">Post ID: ${P.id} <button class="copy-btn" data-post-id="${P.id}">Copy</button></p>
      ${E.userId===auth.currentUser.uid||d?`<button class="delete-btn" id="deletePost-${P.id}">Delete Post</button>`:""}
      ${C.isOwner&&1===C.reportCount?`
        <div class="report-warning" id="warning-${P.id}">
          This post has 1 report. One more hides it—check summary!
        </div>`:""}
      ${C.isOwner&&C.reportCount>=2?`
        <div class="report-warning" id="warning-${P.id}">
          This post has ${C.reportCount} reports and is hidden. Appeal above!
        </div>`:""}
    `,t.appendChild(x),x.querySelector(`.username[data-uid="${E.userId}"]`).addEventListener("click",()=>viewProfile(E.userId));let D=x.querySelector(`#deletePost-${P.id}`);D&&D.addEventListener("click",()=>deletePost(P.id)),x.querySelector(`.copy-btn[data-post-id="${P.id}"]`).addEventListener("click",e=>{e.stopPropagation(),copyPostId(P.id)}),M>1&&setupYourPostsCarousel(P.id)}await i(),s?document.getElementById("scroll-to-ur-posts")?.scrollIntoView({behavior:"smooth"}):window.scrollTo(0,y)}catch(T){console.error("Failed to load your posts:",T),t.innerHTML="<p>Oops, something broke! Try refreshing.</p>",s?document.getElementById("scroll-to-ur-posts")?.scrollIntoView({behavior:"smooth"}):window.scrollTo(0,y)}}async function i(){let e=t.querySelector("#seeMoreYourPostsBtn"),a=t.querySelector("#seeLessYourPostsBtn");e&&e.remove(),a&&a.remove();let o=document.createElement("div");o.id="yourPostsButtons",o.style.cssText="margin-top: 10px; text-align: center; display: block !important; visibility: visible !important;";let i=document.createElement("button");i.id="seeMoreYourPostsBtn",i.textContent="See More",i.className="see-more-btn",i.style.cssText="display: none !important; margin: 5px auto; padding: 5px 10px; visibility: hidden !important; opacity: 0 !important;",i.addEventListener("click",()=>s());let r=document.createElement("button");r.id="seeLessYourPostsBtn",r.textContent="See Less",r.className="see-less-btn",r.style.cssText="display: none !important; margin: 5px auto; padding: 5px 10px; visibility: hidden !important; opacity: 0 !important;",r.addEventListener("click",async()=>{await s(!0)}),o.appendChild(i),o.appendChild(r),t.appendChild(o),totalYourPosts>n.size&&totalYourPosts>2&&(i.style.cssText="display: block !important; margin: 5px auto; padding: 5px 10px; visibility: visible !important; opacity: 1 !important; position: relative !important;"),n.size>2&&(r.style.cssText="display: block !important; margin: 5px auto; padding: 5px 10px; visibility: visible !important; opacity: 1 !important; position: relative !important;")}await s()}async function savePost(e,t,a){console.log(`savePost called for postId: ${e}`);let o=document.getElementById("savePostModal"),n=document.getElementById("savePostNote"),i=document.getElementById("confirmSavePostBtn"),r=document.getElementById("cancelSavePostBtn"),p=auth.currentUser;n.value="",o.style.display="flex",o.classList.remove("hidden"),i.dataset.postId=e,i.dataset.communityId=t,i.onclick=async()=>{let o=n.value.trim(),i=s(db,"users",p.uid),r=l(i,"savedPosts"),y=c(r,u("postId","==",e),u("communityId","==",t)),g=await m(y);if(!g.empty){alert("You’ve already saved this post!"),closeModal("savePostModal");return}await d(r,{postId:e,communityId:t,note:o||"",savedAt:new Date}),a&&(a.textContent="Unsave"),alert("Post saved!"),closeModal("savePostModal")},r.onclick=()=>closeModal("savePostModal")}async function deleteSavedPostFromPost(e,t,a){console.log(`deleteSavedPostFromPost called for postId: ${e}`);let o=auth.currentUser,n=s(db,"users",o.uid),i=c(l(n,"savedPosts"),u("postId","==",e),u("communityId","==",t)),r=await m(i);if(r.empty){console.log(`Post ${e} not found in savedPosts`),alert("Post already unsaved!"),a&&(a.textContent="Save");return}if(confirm("Are you sure you want to unsave this post?")){let d=r.docs[0];await y(s(db,"users",o.uid,"savedPosts",d.id)),a&&(a.textContent="Save"),alert("Post unsaved!")}}async function viewSavedPosts(e){let t=document.getElementById("viewSavedPostsModal"),a=document.getElementById("savedPostsList"),o=document.getElementById("closeSavedPostsBtn");if("function"!=typeof s||!db){console.error("Firebase setup issue - doc:",s,"db:",db),a.innerHTML="<p class='error-message'>Error: Couldn’t load saved posts. Try refreshing.</p>",t.style.display="flex",t.classList.remove("hidden"),o.onclick=()=>closeModal("viewSavedPostsModal");return}a.innerHTML='<div class="loading">⏳ Loading...</div>',t.style.display="flex",t.classList.remove("hidden");try{let n=s(db,"users",e),r=c(l(n,"savedPosts"),b("savedAt","desc")),d=await m(r);if(a.innerHTML="",a.classList.add("saved-posts-grid"),d.empty)a.innerHTML="<p class='no-posts-message'>No saved posts yet!</p>";else for(let u of d.docs){let p=u.data(),y=null,g={name:"Unknown"},f="Unknown Community";try{let h=s(db,"communities",p.communityId,"posts",p.postId),$=await i(h);(y=$.exists()?$.data():null)&&(g=await fetchUserData(y.userId||"unknown"))}catch(w){console.warn(`Failed to fetch post ${p.postId}:`,w)}try{let v=s(db,"communities",p.communityId),I=await i(v);f=I.exists()?I.data().name||"Unnamed Community":"Unknown Community"}catch(P){console.warn(`Failed to fetch community ${p.communityId}:`,P)}let C=document.createElement("div");C.className="saved-post-card",C.dataset.docId=u.id,C.innerHTML=`
      <div class="post-card-content">
        <h3>${y?y.title:"Post Deleted"}</h3>
        <p>By: ${g.name}</p>
        <p>Post ID: <span class="copyable-post-id clickable" data-post-id="${p.postId}">${p.postId}</span></p>
        <p>Community: <a href="./community.html?id=${p.communityId}">${f}</a></p>
        <p class="saved-note">Note: <span data-doc-id="${u.id}">${p.note||"No note"}</span></p>
        <div class="post-card-actions">
          <button class="edit-note-btn" data-doc-id="${u.id}">✏️ Edit Note</button>
          <button class="delete-saved-btn" data-doc-id="${u.id}">🗑️ Unsave</button>
        </div>
      </div>
    `,a.appendChild(C),C.style.opacity="0",setTimeout(()=>{C.style.transition="opacity 0.3s ease",C.style.opacity="1"},50),C.querySelector(`.copyable-post-id[data-post-id="${p.postId}"]`).addEventListener("click",()=>{navigator.clipboard.writeText(p.postId).then(()=>alert("Post ID copied!")).catch(e=>console.error("Copy failed:",e))}),C.querySelector(`.edit-note-btn[data-doc-id="${u.id}"]`).addEventListener("click",()=>editSavedNote(u.id,p.note)),C.querySelector(`.delete-saved-btn[data-doc-id="${u.id}"]`).addEventListener("click",()=>deleteSavedPost(u.id,e))}}catch(E){console.error("Error loading saved posts:",E),a.innerHTML="<p class='error-message'>Oops, something went wrong. Try again later.</p>"}o.onclick=()=>closeModal("viewSavedPostsModal")}async function editSavedNote(e,t){let a=document.getElementById("savePostModal"),o=document.getElementById("savePostNote"),n=document.getElementById("confirmSavePostBtn"),i=document.getElementById("cancelSavePostBtn");a.querySelector("h2").textContent="Edit Note",o.value=t,a.style.display="flex",a.classList.remove("hidden"),n.onclick=async()=>{let t=o.value.trim(),n=auth.currentUser,i=s(db,"users",n.uid,"savedPosts",e);try{await r(i,{note:t||""}),document.querySelector(`.saved-note[data-doc-id="${e}"]`).textContent=t||"No note",closeModal("savePostModal"),a.querySelector("h2").textContent="Save Post"}catch(d){console.error("Error updating note:",d),alert("Failed to update note. Try again.")}},i.onclick=()=>{closeModal("savePostModal"),a.querySelector("h2").textContent="Save Post"}}async function deleteSavedPost(e,t){if(confirm("Are you sure you want to unsave this post?")){let a=auth.currentUser,o=s(db,"users",a.uid,"savedPosts",e),n=document.getElementById("savedPostsList"),i=n.querySelector(`.saved-post-card[data-doc-id="${e}"]`);try{i&&(i.style.transition="opacity 0.3s ease",i.style.opacity="0",await new Promise(e=>setTimeout(e,300))),await y(o),i&&i.remove(),n.querySelector(".saved-post-card")||(n.innerHTML="<p class='no-posts-message'>No saved posts yet!</p>"),alert("Post unsaved!")}catch(r){console.error("Error deleting saved post:",r),i&&(i.style.opacity="1"),alert("Failed to unsave post. Try again.")}}}async function getTotalPosts(e){let t=s(db,"communities",e),a=await i(t),o=a.data();return o.postCount||0}async function searchPostsById(e){let t=document.getElementById("postList"),a=document.getElementById("caughtUpMessage");if(t.innerHTML='<div class="loading">⏳ Searching...</div>',a.style.display="none",!e||""===e.trim()){isSearching=!1,t.innerHTML="",await loadPosts(communityId,!0);return}isSearching=!0;try{let o=getCachedPosts(),n=o.get(e.trim()),d,p,y,g,f;if(n){console.log(`Post ${e} found in cache—no Firestore read needed.`),d=n.data,p=e.trim(),y=await fetchUserData(d.userId||"unknown"),g=await getPostReportStatus(p);let h=c(l(db,"communities",communityId,"posts",p,"comments")),b=await m(h);f=b.size}else{console.log(`Post ${e} not in cache—fetching from Firestore.`);let $=c(l(db,"communities",communityId,"posts"),u("__name__","==",e.trim())),w=await m($);if(t.innerHTML="",w.empty){t.innerHTML=`<p>No post found with ID: ${e}</p>`;return}let v=w.docs[0];d=normalizePostData(v.data()),p=v.id,y=await fetchUserData(d.userId||"unknown"),o.set(p,{id:p,data:d,score:getPostScore(d,getLikedPrefs())}),setCachedPosts(o),g=await getPostReportStatus(p);let I=c(l(db,"communities",communityId,"posts",p,"comments")),P=await m(I);f=P.size}let C=auth.currentUser,E=await getCommData(),S=E?.admins?.includes(C.uid)||E?.creatorId===C.uid,L=d.userId===C.uid;if(g.isHidden&&!S&&!L){t.innerHTML=`<p>Post ID ${e} is hidden due to reports (visible to admins/owner only).</p>`;return}let B=d.createdAt?new Date(d.createdAt).toLocaleString():"N/A",M=d.photoUrls||[],x=M.length;t.innerHTML=`
  <div id="searchMessage" class="search-message">
    <p>Showing post with ID: ${p}. <button id="showAllPostsBtn">Click here to see all posts again</button></p>
  </div>
  <div class="post" id="post-${p}">
    <h3>${d.title||"No Title"}</h3>
    <p class="post-description">${d.description||"No Description"}</p>
    <div class="photo-carousel" id="carousel-${p}-search" data-photos='${JSON.stringify(M)}'>
      ${x>1?`<button class="carousel-prev" data-post-id="${p}-search"><</button>`:""}
      <img loading="lazy" src="${M[0]||"https://firebasestorage.googleapis.com/v0/b/life-swap-6065e.firebasestorage.app/o/static%2Fno-image.webp?alt=media&token=6a974dce-aa63-4d94-b889-a86f626fb430"}" alt="Post photo" class="carousel-image">
      ${x>1?`<button class="carousel-next" data-post-id="${p}-search">></button>`:""}
    </div>
    <p>By: <span class="username" data-uid="${d.userId||"unknown"}">${y.name||"Unknown"} (${y.username||"unknown"})</span></p>
    <p>Location: ${d.location?.name||"N/A"}</p>
    <p>Category: ${d.category||"N/A"}</p>
    <p class="highlight">Looking For: ${d.lookingFor||"N/A"} | Offering: ${d.offering||"N/A"}</p>
    <p>Posted: ${B}</p>
    <p>Post ID: ${p} <button class="copy-btn" data-post-id="${p}">Copy</button></p>
    <button class="like-btn" data-post-id="${p}">${(d.likedBy||[]).includes(C.uid)?"\uD83D\uDC94 Unlike":"❤️ Like"} (${d.likes||0})</button>
    <button class="report-btn" id="reportPost-${p}">Report Post</button>
    <br><br>
    ${L||S?`<button class="delete-btn" id="deletePost-${p}">Delete Post</button>`:""}
    ${g.isOwner&&1===g.reportCount?`
      <div class="report-warning" id="warning-${p}">
        This post has 1 report. One more will hide it—check summary!
      </div>`:""}
    ${g.isOwner&&g.reportCount>=2?`
      <div class="report-warning" id="warning-${p}">
        This post has ${g.reportCount} reports and is hidden. Appeal above!
      </div>`:""}
    ${S&&g.reportCount>0?`
      <div class="admin-report-controls" id="admin-controls-${p}">
        This post received ${g.reportCount} report${g.reportCount>1?"s":""}.
        <button class="remove-post-btn" data-post-id="${p}">Remove Post</button>
        <button class="clear-reports-btn" data-post-id="${p}">Clear Reports</button>
      </div>`:""}
    <div class="comments-section">
      <a href="#" class="comment-count" id="toggleComments-${p}">${f} comments</a>
      <div class="comments-thread" id="comments-${p}" style="display: none;"></div>
      <form id="commentForm-${p}" class="comment-form">
        <textarea placeholder="Add a comment..." required></textarea>
        <button type="submit">Comment</button>
      </form>
    </div>
  </div>
`;let D=t.querySelector("#showAllPostsBtn");D&&D.addEventListener("click",async()=>{let e=document.getElementById("postSearch");e&&(e.value=""),isSearching=!1,t.innerHTML="",await loadPosts(communityId,!0)});let T=t.querySelector(`#post-${p}`);T.querySelector(`.username[data-uid="${d.userId||"unknown"}"]`).addEventListener("click",()=>viewProfile(d.userId||"unknown")),T.querySelector(`.copy-btn[data-post-id="${p}"]`).addEventListener("click",e=>{e.stopPropagation(),copyPostId(p)}),T.querySelector(`#reportPost-${p}`).addEventListener("click",()=>reportPost(p));let A=T.querySelector(`#deletePost-${p}`);A&&A.addEventListener("click",()=>deletePost(p)),S&&(T.querySelector(`.remove-post-btn[data-post-id="${p}"]`)?.addEventListener("click",()=>deletePost(p)),T.querySelector(`.clear-reports-btn[data-post-id="${p}"]`)?.addEventListener("click",()=>clearReports(p))),T.querySelector(`#toggleComments-${p}`).addEventListener("click",e=>{e.preventDefault(),k(p)}),T.querySelector(`#commentForm-${p}`).addEventListener("submit",e=>{e.preventDefault(),addComment(p,d.userId)});let q=T.querySelector(`.like-btn[data-post-id="${p}"]`);q.addEventListener("click",async()=>{let e=s(db,"communities",communityId,"posts",p),t=await i(e);if(!t.exists()){alert("Post not found—might’ve been deleted!");return}let a=normalizePostData(t.data()),n=auth.currentUser.uid,d=a.likedBy||[],l=a.likes||0,c=[...d];d.includes(n)?(await r(e,{likes:l=Math.max(0,l-1),likedBy:c=c.filter(e=>e!==n)}),q.textContent=`Like (${l})`):(c.push(n),await r(e,{likes:l+=1,likedBy:c}),q.textContent=`💔 Unlike (${l})`,addLikedPref(a.category,a.offering)),o.set(p,{id:p,data:{...a,likes:l,likedBy:c},score:getPostScore({...a,likes:l,likedBy:c},getLikedPrefs())}),setCachedPosts(o)}),x>1&&setupSearchCarousel(p)}catch(_){console.error("Search error:",_),t.innerHTML="<p>Something went wrong, try again!</p>"}finally{isSearching=!1}}function setupSearchCarousel(e){let t=document.getElementById(`carousel-${e}-search`),a=t.querySelector(`.carousel-prev[data-post-id="${e}-search"]`),o=t.querySelector(`.carousel-next[data-post-id="${e}-search"]`),n=t.querySelector(".carousel-image"),s=JSON.parse(t.dataset.photos||"[]"),i=0;a&&o&&n&&(0===s.length&&(s=["https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y"]),n.src=s[0],a.addEventListener("click",e=>{e.preventDefault(),i=(i-1+s.length)%s.length,n.src=s[i]}),o.addEventListener("click",e=>{e.preventDefault(),i=(i+1)%s.length,n.src=s[i]}))}async function acceptProfileRequest(e,t){let a=s(db,"users",t,"profileRequests",e),o=await i(a),n=o.data().requesterId,c=await fetchCurrentUserData();await r(a,{status:"accepted"}),await d(l(db,"users",n,"notifications"),{type:"profile_request_accepted",message:`${c.name||"Someone"} accepted your profile view request!`,requestId:e,timestamp:new Date,seen:!1});let u=s(db,"users",n);await w(db,async e=>{let t=await e.get(u),a=t.exists()&&t.data().unseenCount||0;e.set(u,{unseenCount:a+1,lastUpdated:new Date},{merge:!0}),console.log(`Client: Incremented unseenCount for ${n} to ${a+1}`)}),alert("Profile view request accepted!"),closeModal("viewProfileViewRequestsModal"),await updateProfileRequestsUI(t),viewProfileViewRequests(t),setTimeout(()=>updateNotificationBadge(n,!0),1e3)}async function declineProfileRequest(e,t){let a=s(db,"users",t,"profileRequests",e),o=await i(a),n=o.data().requesterId,r=await fetchCurrentUserData();await y(a),await d(l(db,"users",n,"notifications"),{type:"profile_request_declined",message:`${r.name||"Someone"} declined your profile view request.`,requestId:e,timestamp:new Date,seen:!1});let c=s(db,"users",n);await w(db,async e=>{let t=await e.get(c),a=t.exists()&&t.data().unseenCount||0;e.set(c,{unseenCount:a+1,lastUpdated:new Date},{merge:!0}),console.log(`Client: Incremented unseenCount for ${n} to ${a+1}`)}),alert("Profile view request declined!"),closeModal("viewProfileViewRequestsModal"),await updateProfileRequestsUI(t),viewProfileViewRequests(t),setTimeout(()=>updateNotificationBadge(n,!0),1e3)}async function revokeProfileAccess(e,t){let a=s(db,"users",e,"profileRequests",t);await y(a),alert("Profile access revoked!"),closeModal("viewProfileModal"),await viewProfile(e)}async function revokeProfileAccessFromModal(e,t){let a=s(db,"users",t,"profileRequests",e);await y(a),alert("Profile access revoked!"),closeModal("viewProfileViewRequestsModal"),await updateProfileRequestsUI(t),viewProfileViewRequests(t)}async function viewProfileViewRequests(e){let t=document.getElementById("viewProfileViewRequestsModal"),a=document.getElementById("profileViewRequestsList"),o=document.getElementById("grantedProfileAccessList"),n=l(db,"users",e,"profileRequests"),s=c(n,u("status","==","pending")),i=await m(s);for(let r of(a.innerHTML=i.empty?"<p>No pending profile view requests.</p>":"",i.docs)){let d=r.data(),p=await fetchUserData(d.requesterId);a.innerHTML+=`
  <div class="request-item" id="request-${r.id}">
    <span>${p.name} (${p.username})</span>
    <button class="accept-btn" data-request-id="${r.id}">Accept</button>
    <button class="decline-btn" data-request-id="${r.id}">Decline</button>
  </div>
`}let y=c(n,u("status","==","accepted")),g=await m(y);for(let f of(o.innerHTML=g.empty?"<p>No granted profile access.</p>":"",g.docs)){let h=f.data(),b=await fetchUserData(h.requesterId);o.innerHTML+=`
  <div class="request-item" id="granted-${f.id}">
    <span>${b.name} (${b.username})</span>
    <button class="revoke-btn" data-request-id="${f.id}">Revoke</button>
  </div>
`}document.querySelectorAll(".modal:not(#viewProfileViewRequestsModal)").forEach(e=>e.style.display="none"),t.style.display="flex",t.classList.remove("hidden"),a.querySelectorAll(".accept-btn").forEach(t=>{t.addEventListener("click",()=>acceptProfileRequest(t.dataset.requestId,e))}),a.querySelectorAll(".decline-btn").forEach(t=>{t.addEventListener("click",()=>declineProfileRequest(t.dataset.requestId,e))}),o.querySelectorAll(".revoke-btn").forEach(t=>{t.addEventListener("click",()=>revokeProfileAccessFromModal(t.dataset.requestId,e))})}let currentMembers=[];async function viewMembers(e){let t=document.getElementById("viewMembersModal"),a=document.getElementById("membersList"),o=document.getElementById("memberSearch");if(!t||!a||!o){console.error("Members modal elements missing!");return}lastMemberDoc=null,a.innerHTML='<div class="loading">⏳ Loading...</div>',t.style.display="flex",t.classList.remove("hidden");let n=await getCommData(),s=n.memberCount||0;console.log("Total members from memberCount:",s);let i=t.querySelector("h2")||document.createElement("h2");t.querySelector("h2")||t.querySelector(".modal-content").prepend(i),i.textContent=`Members (Total: ${s})`;let r=l(db,"communities",e,"members"),d=c(r,p(ITEMS_PER_PAGE)),u;try{u=await m(d)}catch(y){console.error("Error fetching initial members:",y),a.innerHTML="<p>Failed to load members. Try again.</p>";return}currentMembers=u.docs.map(e=>e.id),console.log("Initial members loaded:",currentMembers.length),await loadMembersBatch(u,!0,s),o.oninput=debounce(t=>searchMembers(e,t.target.value),300)}async function loadMembersBatch(e,t=!1,a){let o=document.getElementById("membersList");t&&(o.innerHTML="",lastMemberDoc=null);let n=lastMemberDoc?o.querySelectorAll(".user-item").length:0;if(console.log("Loading batch:",{startIndex:n,batchSize:e.docs.length}),e.empty&&0===n){o.innerHTML="<p>No members yet!</p>",updateMembersButtons(a,0);return}let s=e.docs.map(e=>e.id),i;try{let r=c(l(db,"users"),u("__name__","in",s));i=await m(r)}catch(d){console.error("Error fetching user data for members:",d),o.innerHTML+="<p>Failed to load some member data.</p>";return}console.log("Fetched users:",i.docs.length),i.docs.forEach(e=>{let t=e.data(),a=`member-${e.id}`;if(!document.getElementById(a)){let n=document.createElement("div");n.className="user-item",n.id=a,n.innerHTML=`
    <img loading="lazy" src="${t.profilePhoto||"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y"}" alt="Profile">
    <span class="username" data-uid="${e.id}">${t.name}</span>
  `,o.appendChild(n),n.querySelector(`.username[data-uid="${e.id}"]`).addEventListener("click",()=>viewProfile(e.id))}}),lastMemberDoc=e.docs.length===ITEMS_PER_PAGE?e.docs[e.docs.length-1]:null;let p=o.querySelectorAll(".user-item").length;console.log("Loaded count:",p),updateMembersButtons(a,p)}function updateMembersButtons(e,t){let a=document.getElementById("membersList"),o=a.querySelector("#seeMoreMembersBtn"),n=a.querySelector("#seeLessMembersBtn");if(o&&o.remove(),n&&n.remove(),console.log("Updating buttons:",{totalMembers:e,loadedCount:t}),e>0){let s=document.createElement("button");s.id="seeMoreMembersBtn",s.textContent="See More",s.className="see-more-btn",s.style.display=e>t?"block":"none",s.onclick=async()=>{let t=l(db,"communities",communityId,"members");try{let o=c(t,f(lastMemberDoc),p(ITEMS_PER_PAGE)),n=await m(o);currentMembers=currentMembers.concat(n.docs.map(e=>e.id)),await loadMembersBatch(n,!1,e)}catch(s){console.error("Error loading more members:",s),a.innerHTML+="<p>Failed to load more members.</p>"}};let i=document.createElement("button");i.id="seeLessMembersBtn",i.textContent="See Less",i.className="see-less-btn",i.style.display=t>ITEMS_PER_PAGE?"block":"none",i.onclick=()=>loadMembersBatch([],!0,e),a.appendChild(s),a.appendChild(i),console.log("See More display:",s.style.display)}}async function searchMembers(e,t){let a=document.getElementById("membersList"),o=0;if(a.innerHTML='<div class="loading">⏳ Searching...</div>',!t)return lastMemberDoc=null,viewMembers(e);let n=l(db,"communities",e,"members"),s;try{s=await m(n)}catch(i){console.error("Error fetching all members for search:",i),a.innerHTML="<p>Failed to search members.</p>";return}let r=s.docs.map(e=>e.id),d=[];for(let p of r){let y=userDataCache[p]||await fetchUserData(p);y&&(y.name.toLowerCase().includes(t.toLowerCase())||y.username.toLowerCase().includes(t.toLowerCase()))&&d.push(p)}async function g(e=!1){e&&(o=0,a.innerHTML="");let t=d.slice(o,o+ITEMS_PER_PAGE);if(console.log(`Loading search batch: startIndex=${o}, batchSize=${t.length}`),0===t.length){0===o&&(a.innerHTML="<p>No matching members found.</p>"),f(d.length,o);return}let n;try{let s=c(l(db,"users"),u("__name__","in",t));n=await m(s)}catch(i){console.error("Error fetching search batch:",i),a.innerHTML+="<p>Failed to load some members.</p>";return}0===o&&(a.innerHTML=""),n.docs.forEach(e=>{let t=e.data(),o=`member-${e.id}`;if(!document.getElementById(o)){let n=document.createElement("div");n.className="user-item",n.id=o,n.innerHTML=`
      <img loading="lazy" src="${t.profilePhoto||"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y"}" alt="Profile">
      <span class="username" data-uid="${e.id}">${t.name}</span>
    `,a.appendChild(n),n.querySelector(`.username[data-uid="${e.id}"]`).addEventListener("click",()=>viewProfile(e.id))}});let r=a.querySelectorAll(".user-item").length;f(d.length,r)}function f(e,t){let n=a.querySelector("#seeMoreSearchMembersBtn"),s=a.querySelector("#seeLessSearchMembersBtn");if(n&&n.remove(),s&&s.remove(),console.log(`Search buttons: totalFiltered=${e}, loadedCount=${t}`),e>0){let i=document.createElement("button");i.id="seeMoreSearchMembersBtn",i.textContent="See More",i.className="see-more-btn",i.style.display=e>t?"block":"none",i.onclick=()=>{o+=ITEMS_PER_PAGE,g()};let r=document.createElement("button");r.id="seeLessSearchMembersBtn",r.textContent="See Less",r.className="see-less-btn",r.style.display=t>ITEMS_PER_PAGE?"block":"none",r.onclick=()=>g(!0),a.appendChild(i),a.appendChild(r)}}console.log(`Search filtered members: ${d.length} matches for "${t}"`),await g(!0)}async function viewCommunities(e){let t=document.getElementById("viewCommunitiesModal"),a=document.getElementById("communitiesList"),o=document.getElementById("closeCommunitiesBtn");a.innerHTML='<div class="loading">⏳ Loading...</div>',t.style.display="flex",t.classList.remove("hidden");let n=s(db,"users",e),r=await i(n),d=r.data().communityIds||[];if(0===d.length)a.innerHTML="<p>You’re not in any communities yet!</p>";else{a.innerHTML="";let l=d.map(e=>i(s(db,"communities",e))),c=await Promise.all(l);c.forEach(t=>{if(t.exists()){let o=t.data(),n=(o.bannedUsers||[]).includes(e);if(!n){let s=document.createElement("div");s.className="community-item",s.innerHTML=`
        <a href="./community.html?id=${t.id}">${o.name||"Unnamed"}</a>
      `,a.appendChild(s)}}}),a.children.length||(a.innerHTML="<p>No active communities found.</p>")}o.onclick=()=>{t.style.display="none",t.classList.add("hidden")}}async function getUnseenNotificationCount(e,t=!1){let a=Date.now(),o=`unseenNotifCount_${e}`,n=JSON.parse(localStorage.getItem(o))||{count:0,timestamp:0};if(!t&&n.timestamp&&a-n.timestamp<36e5)return console.log(`Using cached unseen count: ${n.count} (age: ${Math.round((a-n.timestamp)/1e3)}s)`),n.count;console.log("Fetching fresh unseen notification count...");let r=s(db,"users",e);try{let d=await i(r);if(!d.exists())throw Error("User not found");let l=d.data().unseenCount||0;return localStorage.setItem(o,JSON.stringify({count:l,timestamp:a})),console.log(`Fetched unseen count: ${l}`),l}catch(c){return console.error("Error fetching unseen count:",c),n.count}}async function updateNotificationBadge(e,t=!0){let a=await getUnseenNotificationCount(e,t),o=document.getElementById("notificationCount");return o&&(o.textContent=a>0?`(${a})`:"",o.style.display=a>0?"inline":"none",console.log(`Badge updated to: ${a}`)),a}async function openNotificationsModal(e){let t=document.getElementById("notificationsModal"),a=document.getElementById("notificationList"),o=document.getElementById("modalNotificationCount"),n=document.getElementById("communityFilter");if(!t||!a||!o||!n){console.error("Notifications modal elements missing from DOM!"),alert("Something’s broken—refresh the page!");return}let y=t.querySelector("#refreshNotificationsBtn");y||((y=document.createElement("button")).id="refreshNotificationsBtn",y.textContent="Refresh",y.style.marginLeft="10px",t.querySelector(".modal-content").insertBefore(y,document.getElementById("clearNotificationsBtn"))),a.innerHTML='<div class="loading">⏳ Loading...</div>',t.style.display="flex",t.classList.remove("hidden");let g=s(db,"users",e),h=[];try{let $=await i(g);if(!$.exists())throw Error("User not found");let w=$.data().communityIds||[],v=await Promise.all(w.map(e=>i(s(db,"communities",e))));h=v.filter(e=>e.exists()).map(e=>({id:e.id,name:e.data().name||"Unnamed Community"}))}catch(I){console.error("Error fetching communities:",I),a.innerHTML="<p>Failed to load communities. Try refreshing.</p>";return}n.innerHTML='<option value="all">All Communities</option>',h.forEach(e=>{let t=document.createElement("option");t.value=e.id,t.textContent=e.name,n.appendChild(t)});let P=await updateNotificationBadge(e,!1);async function C(){console.log("handleViewChatsClick triggered with userId:",e,"communityId:",communityId),await updateChatBadge(e,!0),await window.viewChats(communityId),await updateChatBadge(e)}async function E(t=!1,s=!1){let i=n.value;t&&(lastDoc=null,displayedCount=0,allNotifications=[],a.innerHTML='<div class="loading">⏳ Loading...</div>');let r=3;for(;r>0;)try{let d=l(db,"users",e,"notifications"),y;y="all"===i?c(d,b("timestamp","desc"),...lastDoc&&!t?[f(lastDoc)]:[],p(10)):c(d,u("communityId","==",i),b("timestamp","desc"),...lastDoc&&!t?[f(lastDoc)]:[],p(10));let g=await m(y),$=g.docs.map(e=>({id:e.id,data:e.data()}));if(s?$.forEach(e=>{allNotifications.some(t=>t.id===e.id)||allNotifications.unshift(e)}):($.forEach(e=>{allNotifications.some(t=>t.id===e.id)||allNotifications.push(e)}),lastDoc=10===g.docs.length?g.docs[g.docs.length-1]:null),allNotifications.sort((e,t)=>t.data.timestamp.toDate()-e.data.timestamp.toDate()),0===allNotifications.length)a.innerHTML="<p>No notifications yet.</p>";else{let w=t?0:displayedCount,v=Math.min(w+10,allNotifications.length),I=allNotifications.slice(0,v).map(e=>S({id:e.id,data:()=>e.data},h)).join("");a.innerHTML=I,displayedCount=v}let P=await getUnseenNotificationCount(e,s);o.textContent=P,k(),L();break}catch(C){if(console.error("Error fetching notifications:",C),0==--r){a.innerHTML="<p>Failed to load notifications after retries. Check your connection!</p>",k();break}await new Promise(e=>setTimeout(e,1e3))}}function S(e,t){let a=e.data(),o=new Date(a.timestamp.toDate()).toLocaleString(),n=a.message||"No message";if(a.communityId&&"ban_appeal"!==a.type){let s=t.find(e=>e.id===a.communityId)?.name||"Unknown Community";n+=` (${s})`}let i=`
<div class="notification-item ${a.seen?"seen":""}" data-id="${e.id}" data-type="${a.type}">
`;return"follow"===a.type&&a.followerId?i+=`
  <span class="clickable-profile" data-uid="${a.followerId}">${n}</span>
`:i+=`<span>${n}</span>`,i+=`
  <span class="timestamp">${o}</span>
  ${a.postId?`<button class="copy-id-btn2" data-post-id="${a.postId}">Copy ID</button>`:""}
  <button class="mark-seen-btn2" data-id="${e.id}" ${a.seen?"disabled":""}>${a.seen?"Seen":"Mark as Seen"}</button>
`,"ban_appeal"!==a.type||a.appealSubmitted||(i+=`
  <form class="ban-appeal-form" data-id="${e.id}">
    <textarea placeholder="Explain why this ban might be an error..." required></textarea>
    <button type="submit">Send Appeal</button>
  </form>
`),i+="</div>"}function L(){a.querySelectorAll(".copy-id-btn2").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation(),copyPostId(e.dataset.postId)})}),a.querySelectorAll(".mark-seen-btn2").forEach(e=>{e.disabled||e.addEventListener("click",t=>{t.stopPropagation(),markNotificationSeen(e.dataset.id)})}),a.querySelectorAll(".ban-appeal-form").forEach(t=>{t.addEventListener("submit",async a=>{a.preventDefault();let o=t.querySelector("textarea").value.trim();if(o){let n=t.dataset.id,c=allNotifications.find(e=>e.id===n).data;try{let u=await i(s(db,"users",e)),m=u.exists()?u.data():{username:`user_${e.slice(0,8)}`};await d(l(db,"communities",c.communityId,"banAppeals"),{userId:e,username:m.username,message:o,timestamp:new Date,notificationId:n}),await r(s(db,"users",e,"notifications",n),{appealSubmitted:!0}),alert("Appeal sent!"),await E(!0)}catch(p){console.error("Error submitting appeal:",p),alert("Failed to send appeal.")}}})}),a.querySelectorAll(".notification-item").forEach(t=>{t.addEventListener("click",async a=>{if("BUTTON"===a.target.tagName||"TEXTAREA"===a.target.tagName||a.target.closest("form"))return;let o=allNotifications.find(e=>e.id===t.dataset.id).data,n=t.dataset.type;if("follow"===n&&o.followerId)closeModal("notificationsModal"),await viewProfile(o.followerId);else if("profile_request"===n||"profile_request_accepted"===n||"profile_request_declined"===n)closeModal("notificationsModal"),await viewProfileViewRequests(e);else if("new_message"===n||"chat"===n)console.log("Chat notification clicked, triggering handleViewChatsClick"),closeModal("notificationsModal"),await C();else if(o.postId&&o.communityId){if(o.communityId!==communityId)window.location.href=`/community.html?id=${o.communityId}#post-${o.postId}`;else{closeModal("notificationsModal"),await searchPostsById(o.postId);let s=document.getElementById("search-scrolldown");s?s.scrollIntoView({behavior:"smooth"}):console.warn("Scroll target #search-scrolldown not found!")}}})}),a.querySelectorAll(".clickable-profile").forEach(e=>{e.addEventListener("click",async t=>{t.stopPropagation();let a=e.dataset.uid;closeModal("notificationsModal"),await viewProfile(a)})})}function k(){let e=a.querySelector("#loadMoreBtn"),t=a.querySelector("#loadLessBtn");e&&e.remove(),t&&t.remove();let o=allNotifications.length,n=lastDoc&&displayedCount<o;n&&((e=document.createElement("button")).id="loadMoreBtn",e.textContent="Load More",e.className="load-more-btn",e.onclick=()=>E(!1,!1),a.appendChild(e)),displayedCount>10&&((t=document.createElement("button")).id="loadLessBtn",t.textContent="Load Less",t.className="load-less-btn",t.onclick=()=>{displayedCount=10,a.innerHTML=allNotifications.slice(0,10).map(e=>S({id:e.id,data:()=>e.data},h)).join(""),k(),L()},a.appendChild(t))}o.textContent=P;try{await E(!0)}catch(B){console.error("Initial load failed:",B),a.innerHTML="<p>Failed to load notifications. Try refreshing.</p>"}y.onclick=async()=>{y.disabled=!0,y.textContent="Refreshing...";try{await E(!1,!0),await updateNotificationBadge(e,!0)}catch(t){console.error("Refresh failed:",t),a.innerHTML="<p>Refresh failed. Try again.</p>"}y.disabled=!1,y.textContent="Refresh"},n.onchange=()=>E(!0)}async function markNotificationSeen(e){let t=auth.currentUser?.uid;if(!t){console.error("No authenticated user found.");return}let a=s(db,"users",t,"notifications",e),o=s(db,"users",t);try{let n=await i(a);if(!n.exists()){console.warn(`Notification ${e} not found.`);return}let r=n.data();if(r.seen){console.log(`Notification ${e} already seen.`);return}await w(db,async e=>{let t=await e.get(o);if(!t.exists())throw Error("User not found");let n=t.data().unseenCount||0;e.update(a,{seen:!0}),n>0&&e.update(o,{unseenCount:n-1,lastUpdated:new Date})}),console.log(`Marked notification ${e} as seen.`);let d=document.querySelector(`.mark-seen-btn2[data-id="${e}"]`);d&&(d.disabled=!0,d.textContent="Seen",d.classList.add("disabled")),await updateNotificationBadge(t),document.getElementById("notificationsModal").classList.contains("hidden")||await openNotificationsModal(t)}catch(l){console.error(`Error marking notification ${e} as seen:`,l)}}async function clearNotifications(){let e=auth.currentUser?.uid;if(!e){console.error("No authenticated user found.");return}let t=document.getElementById("communityFilter");if(!t){console.error("Community filter not found.");return}let a=t.value,o="all"===a?"Clear all notifications?":`Clear notifications for ${t.options[t.selectedIndex]?.text||"selected community"} only?`;if(!confirm(o)){console.log("User canceled clearing notifications.");return}try{let n=l(db,"users",e,"notifications"),i;i="all"===a?c(n):c(n,u("communityId","==",a));let r=await m(i);if(r.empty){console.log("No notifications to clear."),await updateNotificationBadge(e),await openNotificationsModal(e);return}let d=s(db,"users",e);await w(db,async e=>{let t=await e.get(d);if(!t.exists())throw Error("User not found");let a=t.data().unseenCount||0,o=r.docs.filter(e=>!e.data().seen).length;e.update(d,{unseenCount:Math.max(0,a-o),lastUpdated:new Date}),r.docs.forEach(t=>e.delete(t.ref))}),console.log(`Cleared ${r.size} notifications.`),await updateNotificationBadge(e),await openNotificationsModal(e)}catch(p){console.error("Error clearing notifications:",p)}}window.updateNotificationBadge=updateNotificationBadge,document.addEventListener("DOMContentLoaded",async()=>{let e=auth.currentUser;e&&await updateNotificationBadge(e.uid,!0)});let commDataCache=null,lastFetchTime=0,CACHE_TTL=18e5,ITEMS_PER_PAGE=100;async function getCommData(e=!1){let t=Date.now();if(commDataCache&&t-lastFetchTime<18e5&&!e)return commDataCache;let a=s(db,"communities",communityId);try{let o=await i(a);if(!o.exists())throw Error("Community not found");let n=o.data(),r=await m(l(db,"communities",communityId,"members")),d=r.docs.map(e=>e.id),c=new Proxy(d,{get(e,t){if("string"==typeof t&&!isNaN(t)){let a=parseInt(t),o=Math.floor(a/ITEMS_PER_PAGE)*ITEMS_PER_PAGE;return e.slice(o,o+ITEMS_PER_PAGE)[a%ITEMS_PER_PAGE]}return"length"===t?e.length:"includes"===t?t=>e.includes(t):t===Symbol.iterator?e[Symbol.iterator].bind(e):"slice"===t?e.slice.bind(e):"filter"===t?e.filter.bind(e):"concat"===t?e.concat.bind(e):e[t]}}),u=new Proxy(n.bannedUsers||[],{get(e,t){if("string"==typeof t&&!isNaN(t)){let a=parseInt(t),o=Math.floor(a/ITEMS_PER_PAGE)*ITEMS_PER_PAGE;return e.slice(o,o+ITEMS_PER_PAGE)[a%ITEMS_PER_PAGE]}return"length"===t?e.length:"includes"===t?t=>e.includes(t):t===Symbol.iterator?e[Symbol.iterator].bind(e):e[t]}}),p=new Proxy(n.admins||[],{get(e,t){if("string"==typeof t&&!isNaN(t)){let a=parseInt(t),o=Math.floor(a/ITEMS_PER_PAGE)*ITEMS_PER_PAGE;return e.slice(o,o+ITEMS_PER_PAGE)[a%ITEMS_PER_PAGE]}return"length"===t?e.length:"includes"===t?t=>e.includes(t):t===Symbol.iterator?e[Symbol.iterator].bind(e):e[t]}});return commDataCache={...n,members:c,bannedUsers:u,admins:p},lastFetchTime=t,console.log(`Fetched fresh community data for ${communityId} with ${d.length} members from subcollection`),commDataCache}catch(y){if(console.error("Error fetching community data:",y),commDataCache)return commDataCache;return{members:[],bannedUsers:[],admins:[],creatorId:"",name:"Unknown",banReasons:{}}}}function resetCommDataCache(){commDataCache=null,lastFetchTime=0,console.log("Cleared community data cache")}function debounce(e,t){let a;return function(...o){clearTimeout(a),a=setTimeout(()=>e.apply(this,o),t)}}window.getCommData=getCommData,window.closeModal=closeModal,window.debounce=debounce,window.communitySearchPostsById=searchPostsById,window.renderPosts=renderPosts,window.searchPostsById=searchPostsById,window.fetchUserData=fetchUserData,window.getCachedUser=getCachedUser,window.setCachedUser=setCachedUser,window.fetchCurrentUserData=fetchCurrentUserData,window.leaveCommunity=leaveCommunity,window.debouncedLoadAdminReportSummary=debouncedLoadAdminReportSummary,window.delay=delay,window.resetCommDataCache=resetCommDataCache;